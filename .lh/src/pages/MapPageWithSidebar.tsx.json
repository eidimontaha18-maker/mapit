{
    "sourceFile": "src/pages/MapPageWithSidebar.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 17,
            "patches": [
                {
                    "date": 1760438405896,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1760439257747,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,28 +20,68 @@\n   const [zones, setZones] = useState<Array<{id: string; name: string; color: string; coordinates: [number, number][];}>>([]);\r\n   const [loading, setLoading] = useState(true);\r\n   const [error, setError] = useState<string | null>(null);\r\n   const [hasUnsavedChanges, setHasUnsavedChanges] = useState(false);\r\n+  const [mapData, setMapData] = useState<{title: string; description: string; map_code: string; map_id: number} | null>(null);\r\n   \r\n   // Check if we're in edit mode\r\n   const isEditMode = location.pathname.startsWith('/edit-map/');\r\n   \r\n-  // Auto-save function for edit mode\r\n-  const handleAutoSave = async (): Promise<void> => {\r\n-    if (!isEditMode || !hasUnsavedChanges || !id) {\r\n-      return; // Nothing to save or not in edit mode\r\n+  // Save function for edit mode\r\n+  const handleSaveMap = async (): Promise<void> => {\r\n+    if (!isEditMode || !id || !mapData) {\r\n+      console.log('Cannot save: not in edit mode, no ID, or no map data');\r\n+      return;\r\n     }\r\n     \r\n     try {\r\n-      // Add your save logic here - similar to CreateMapPage\r\n-      console.log('Auto-saving map changes...');\r\n-      setHasUnsavedChanges(false);\r\n+      console.log('üíæ Saving map changes...');\r\n+      \r\n+      const updateData = {\r\n+        title: mapData.title,\r\n+        description: mapData.description,\r\n+        map_data: {\r\n+          lat: mapPosition.lat,\r\n+          lng: mapPosition.lng,\r\n+          zoom: mapPosition.zoom\r\n+        },\r\n+        country: highlightedCountry || null,\r\n+        active: true\r\n+      };\r\n+      \r\n+      const response = await fetch(`/api/map/${id}`, {\r\n+        method: 'PUT',\r\n+        headers: {\r\n+          'Content-Type': 'application/json',\r\n+        },\r\n+        body: JSON.stringify(updateData)\r\n+      });\r\n+      \r\n+      const result = await response.json();\r\n+      \r\n+      if (result.success) {\r\n+        console.log('‚úÖ Map saved successfully');\r\n+        setHasUnsavedChanges(false);\r\n+        alert('Map saved successfully!');\r\n+      } else {\r\n+        console.error('‚ùå Failed to save map:', result.error);\r\n+        alert('Failed to save map: ' + result.error);\r\n+      }\r\n     } catch (error) {\r\n       console.error('Auto-save failed:', error);\r\n+      alert('Error saving map. Please try again.');\r\n       throw error;\r\n     }\r\n   };\r\n   \r\n+  // Auto-save function for navbar\r\n+  const handleAutoSave = async (): Promise<void> => {\r\n+    if (!isEditMode || !hasUnsavedChanges) {\r\n+      return;\r\n+    }\r\n+    await handleSaveMap();\r\n+  };\r\n+  \r\n   // Load map data if ID is provided\r\n   useEffect(() => {\r\n     if (id) {\r\n       const fetchMapData = async () => {\r\n@@ -55,22 +95,30 @@\n           \r\n           console.log('Map data response:', data);\r\n           \r\n           if (data.success && data.map) {\r\n-            const mapData = data.map;\r\n+            const fetchedMap = data.map;\r\n             \r\n+            // Store the full map data (including title, description, map_code)\r\n+            setMapData({\r\n+              title: fetchedMap.title || '',\r\n+              description: fetchedMap.description || '',\r\n+              map_code: fetchedMap.map_code || '',\r\n+              map_id: fetchedMap.map_id\r\n+            });\r\n+            \r\n             // Set map position from saved data\r\n-            if (mapData.map_data) {\r\n+            if (fetchedMap.map_data) {\r\n               setMapPosition({\r\n-                lat: mapData.map_data.lat || 20,\r\n-                lng: mapData.map_data.lng || 0,\r\n-                zoom: mapData.map_data.zoom || 2\r\n+                lat: fetchedMap.map_data.lat || 20,\r\n+                lng: fetchedMap.map_data.lng || 0,\r\n+                zoom: fetchedMap.map_data.zoom || 2\r\n               });\r\n             }\r\n             \r\n             // Set highlighted country if available\r\n-            if (mapData.country) {\r\n-              setHighlightedCountry(mapData.country);\r\n+            if (fetchedMap.country) {\r\n+              setHighlightedCountry(fetchedMap.country);\r\n             }\r\n             \r\n             // Load zones for this map\r\n             try {\r\n@@ -108,9 +156,20 @@\n   // Handle search results from the sidebar\r\n   const handleSearch = (lat: number, lng: number, zoom: number, countryName?: string) => {\r\n     setMapPosition({ lat, lng, zoom });\r\n     setHighlightedCountry(countryName);\r\n+    if (isEditMode) {\r\n+      setHasUnsavedChanges(true);\r\n+    }\r\n   };\r\n+  \r\n+  // Track zone changes\r\n+  const handleZoneChange = () => {\r\n+    if (isEditMode) {\r\n+      setHasUnsavedChanges(true);\r\n+      console.log('‚ö†Ô∏è  Map has unsaved changes');\r\n+    }\r\n+  };\r\n \r\n   // Add CSS for loading and info overlay\r\n   const styles = `\r\n     .loading-container {\r\n@@ -227,9 +286,68 @@\n             zoom={mapPosition.zoom}\r\n             highlightedCountry={highlightedCountry}\r\n             initialZones={zones}\r\n             mapId={id ? parseInt(id) : undefined}\r\n+            onZoneCreated={handleZoneChange}\r\n           />\r\n+          \r\n+          {/* Map Info Overlay showing title, description, and map code */}\r\n+          {mapData && (\r\n+            <div className=\"map-info-overlay\">\r\n+              <h3 style={{ fontSize: '16px', fontWeight: '600', marginBottom: '8px' }}>\r\n+                {mapData.title}\r\n+              </h3>\r\n+              {mapData.description && (\r\n+                <p style={{ fontSize: '13px', marginBottom: '10px', color: '#666' }}>\r\n+                  {mapData.description}\r\n+                </p>\r\n+              )}\r\n+              <div className=\"map-code-display\">\r\n+                <span className=\"map-code-label\">Map Code</span>\r\n+                <span className=\"map-code-value\">{mapData.map_code}</span>\r\n+              </div>\r\n+              \r\n+              {isEditMode && (\r\n+                <button\r\n+                  onClick={handleSaveMap}\r\n+                  style={{\r\n+                    marginTop: '12px',\r\n+                    width: '100%',\r\n+                    padding: '10px',\r\n+                    background: hasUnsavedChanges ? '#4f8cff' : '#95a5a6',\r\n+                    color: 'white',\r\n+                    border: 'none',\r\n+                    borderRadius: '6px',\r\n+                    cursor: hasUnsavedChanges ? 'pointer' : 'not-allowed',\r\n+                    fontWeight: '600',\r\n+                    fontSize: '14px',\r\n+                    transition: 'all 0.2s ease'\r\n+                  }}\r\n+                  disabled={!hasUnsavedChanges}\r\n+                >\r\n+                  {hasUnsavedChanges ? 'üíæ Save Changes' : '‚úÖ No Changes to Save'}\r\n+                </button>\r\n+              )}\r\n+              \r\n+              <div style={{ \r\n+                marginTop: '10px', \r\n+                fontSize: '12px', \r\n+                color: '#888',\r\n+                display: 'flex',\r\n+                alignItems: 'center',\r\n+                gap: '6px'\r\n+              }}>\r\n+                <span style={{ \r\n+                  display: 'inline-block',\r\n+                  width: '8px',\r\n+                  height: '8px',\r\n+                  borderRadius: '50%',\r\n+                  background: zones.length > 0 ? '#4caf50' : '#e0e0e0'\r\n+                }}></span>\r\n+                {zones.length} zone{zones.length !== 1 ? 's' : ''}\r\n+              </div>\r\n+            </div>\r\n+          )}\r\n         </>\r\n       )}\r\n       <CountrySidebar onSearch={handleSearch} showMaps={false} />\r\n     </div>\r\n"
                },
                {
                    "date": 1760439524974,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import React, { useState, useEffect } from 'react';\r\n-import { useParams, useLocation } from 'react-router-dom';\r\n+import { useParams, useLocation, useNavigate } from 'react-router-dom';\r\n import WorldMap from '../components/WorldMap';\r\n import CountrySidebar from '../components/CountrySidebar';\r\n import AppNavBar from '../components/AppNavBar';\r\n \r\n@@ -9,8 +9,9 @@\n \r\n const MapPageWithSidebar: React.FC = () => {\r\n   const { id } = useParams<{ id: string }>();\r\n   const location = useLocation();\r\n+  const navigate = useNavigate();\r\n   const [mapPosition, setMapPosition] = useState({\r\n     lat: 20,\r\n     lng: 0,\r\n     zoom: 2\r\n@@ -60,9 +61,16 @@\n       \r\n       if (result.success) {\r\n         console.log('‚úÖ Map saved successfully');\r\n         setHasUnsavedChanges(false);\r\n-        alert('Map saved successfully!');\r\n+        \r\n+        // Show success message and redirect to dashboard\r\n+        alert('Map saved successfully! Returning to dashboard...');\r\n+        \r\n+        // Redirect to dashboard after 500ms\r\n+        setTimeout(() => {\r\n+          navigate('/dashboard');\r\n+        }, 500);\r\n       } else {\r\n         console.error('‚ùå Failed to save map:', result.error);\r\n         alert('Failed to save map: ' + result.error);\r\n       }\r\n@@ -306,26 +314,82 @@\n                 <span className=\"map-code-value\">{mapData.map_code}</span>\r\n               </div>\r\n               \r\n               {isEditMode && (\r\n+                <>\r\n+                  <button\r\n+                    onClick={handleSaveMap}\r\n+                    style={{\r\n+                      marginTop: '12px',\r\n+                      width: '100%',\r\n+                      padding: '10px',\r\n+                      background: hasUnsavedChanges ? '#4f8cff' : '#28a745',\r\n+                      color: 'white',\r\n+                      border: 'none',\r\n+                      borderRadius: '6px',\r\n+                      cursor: 'pointer',\r\n+                      fontWeight: '600',\r\n+                      fontSize: '14px',\r\n+                      transition: 'all 0.2s ease',\r\n+                      boxShadow: hasUnsavedChanges ? '0 2px 8px rgba(79,140,255,0.3)' : '0 2px 8px rgba(40,167,69,0.3)'\r\n+                    }}\r\n+                    disabled={!hasUnsavedChanges}\r\n+                  >\r\n+                    {hasUnsavedChanges ? 'üíæ Save & Return to Dashboard' : '‚úÖ All Changes Saved'}\r\n+                  </button>\r\n+                  \r\n+                  <button\r\n+                    onClick={() => navigate('/dashboard')}\r\n+                    style={{\r\n+                      marginTop: '8px',\r\n+                      width: '100%',\r\n+                      padding: '8px',\r\n+                      background: 'transparent',\r\n+                      color: '#4f8cff',\r\n+                      border: '1px solid #4f8cff',\r\n+                      borderRadius: '6px',\r\n+                      cursor: 'pointer',\r\n+                      fontWeight: '600',\r\n+                      fontSize: '13px',\r\n+                      transition: 'all 0.2s ease'\r\n+                    }}\r\n+                    onMouseOver={(e) => {\r\n+                      e.currentTarget.style.background = '#f0f4f9';\r\n+                    }}\r\n+                    onMouseOut={(e) => {\r\n+                      e.currentTarget.style.background = 'transparent';\r\n+                    }}\r\n+                  >\r\n+                    ‚Üê Back to Dashboard\r\n+                  </button>\r\n+                </>\r\n+              )}\r\n+              \r\n+              {!isEditMode && (\r\n                 <button\r\n-                  onClick={handleSaveMap}\r\n+                  onClick={() => navigate('/dashboard')}\r\n                   style={{\r\n                     marginTop: '12px',\r\n                     width: '100%',\r\n                     padding: '10px',\r\n-                    background: hasUnsavedChanges ? '#4f8cff' : '#95a5a6',\r\n+                    background: '#4f8cff',\r\n                     color: 'white',\r\n                     border: 'none',\r\n                     borderRadius: '6px',\r\n-                    cursor: hasUnsavedChanges ? 'pointer' : 'not-allowed',\r\n+                    cursor: 'pointer',\r\n                     fontWeight: '600',\r\n                     fontSize: '14px',\r\n-                    transition: 'all 0.2s ease'\r\n+                    transition: 'all 0.2s ease',\r\n+                    boxShadow: '0 2px 8px rgba(79,140,255,0.3)'\r\n                   }}\r\n-                  disabled={!hasUnsavedChanges}\r\n+                  onMouseOver={(e) => {\r\n+                    e.currentTarget.style.background = '#3a7dff';\r\n+                  }}\r\n+                  onMouseOut={(e) => {\r\n+                    e.currentTarget.style.background = '#4f8cff';\r\n+                  }}\r\n                 >\r\n-                  {hasUnsavedChanges ? 'üíæ Save Changes' : '‚úÖ No Changes to Save'}\r\n+                  ‚Üê Back to Dashboard\r\n                 </button>\r\n               )}\r\n               \r\n               <div style={{ \r\n"
                },
                {
                    "date": 1761124590378,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,14 +22,18 @@\n   const [loading, setLoading] = useState(true);\r\n   const [error, setError] = useState<string | null>(null);\r\n   const [hasUnsavedChanges, setHasUnsavedChanges] = useState(false);\r\n   const [mapData, setMapData] = useState<{title: string; description: string; map_code: string; map_id: number} | null>(null);\r\n+  const [showMapInfo, setShowMapInfo] = useState(true);\r\n+  const [sidebarOpen, setSidebarOpen] = useState(true);\r\n+  const [sidebarPosition] = useState<'left' | 'right'>('right');\r\n+  const [mapType, setMapType] = useState<'road' | 'satellite' | 'hybrid' | 'terrain'>('road');\r\n   \r\n   // Check if we're in edit mode\r\n   const isEditMode = location.pathname.startsWith('/edit-map/');\r\n   \r\n-  // Save function for edit mode\r\n-  const handleSaveMap = async (): Promise<void> => {\r\n+  // Save function for edit mode (stable identity)\r\n+  const handleSaveMap = React.useCallback(async (): Promise<void> => {\r\n     if (!isEditMode || !id || !mapData) {\r\n       console.log('Cannot save: not in edit mode, no ID, or no map data');\r\n       return;\r\n     }\r\n@@ -78,17 +82,17 @@\n       console.error('Auto-save failed:', error);\r\n       alert('Error saving map. Please try again.');\r\n       throw error;\r\n     }\r\n-  };\r\n+  }, [isEditMode, id, mapData, mapPosition, highlightedCountry, navigate]);\r\n   \r\n-  // Auto-save function for navbar\r\n-  const handleAutoSave = async (): Promise<void> => {\r\n+  // Auto-save function for navbar (stable identity)\r\n+  const handleAutoSave = React.useCallback(async (): Promise<void> => {\r\n     if (!isEditMode || !hasUnsavedChanges) {\r\n       return;\r\n     }\r\n     await handleSaveMap();\r\n-  };\r\n+  }, [isEditMode, hasUnsavedChanges, handleSaveMap]);\r\n   \r\n   // Load map data if ID is provided\r\n   useEffect(() => {\r\n     if (id) {\r\n@@ -295,14 +299,43 @@\n             highlightedCountry={highlightedCountry}\r\n             initialZones={zones}\r\n             mapId={id ? parseInt(id) : undefined}\r\n             onZoneCreated={handleZoneChange}\r\n+            initialMapType={mapType}\r\n+            onMapTypeChange={setMapType}\r\n           />\r\n           \r\n           {/* Map Info Overlay showing title, description, and map code */}\r\n-          {mapData && (\r\n+          {mapData && showMapInfo && (\r\n             <div className=\"map-info-overlay\">\r\n-              <h3 style={{ fontSize: '16px', fontWeight: '600', marginBottom: '8px' }}>\r\n+              <button\r\n+                onClick={() => setShowMapInfo(false)}\r\n+                style={{\r\n+                  position: 'absolute',\r\n+                  top: '8px',\r\n+                  right: '8px',\r\n+                  background: 'transparent',\r\n+                  border: 'none',\r\n+                  fontSize: '18px',\r\n+                  cursor: 'pointer',\r\n+                  padding: '4px 8px',\r\n+                  borderRadius: '4px',\r\n+                  color: '#666',\r\n+                  transition: 'all 0.2s ease'\r\n+                }}\r\n+                onMouseOver={(e) => {\r\n+                  e.currentTarget.style.background = '#f0f0f0';\r\n+                  e.currentTarget.style.color = '#000';\r\n+                }}\r\n+                onMouseOut={(e) => {\r\n+                  e.currentTarget.style.background = 'transparent';\r\n+                  e.currentTarget.style.color = '#666';\r\n+                }}\r\n+                title=\"Hide map info\"\r\n+              >\r\n+                ‚úï\r\n+              </button>\r\n+              <h3 style={{ fontSize: '16px', fontWeight: '600', marginBottom: '8px', paddingRight: '30px' }}>\r\n                 {mapData.title}\r\n               </h3>\r\n               {mapData.description && (\r\n                 <p style={{ fontSize: '13px', marginBottom: '10px', color: '#666' }}>\r\n@@ -410,11 +443,102 @@\n                 {zones.length} zone{zones.length !== 1 ? 's' : ''}\r\n               </div>\r\n             </div>\r\n           )}\r\n+          \r\n+          {/* Show Map Info Button (when hidden) */}\r\n+          {mapData && !showMapInfo && (\r\n+            <button\r\n+              onClick={() => setShowMapInfo(true)}\r\n+              style={{\r\n+                position: 'fixed',\r\n+                bottom: '20px',\r\n+                left: '10px',\r\n+                padding: '10px 16px',\r\n+                background: '#4f8cff',\r\n+                color: 'white',\r\n+                border: 'none',\r\n+                borderRadius: '8px',\r\n+                cursor: 'pointer',\r\n+                fontWeight: '600',\r\n+                fontSize: '14px',\r\n+                boxShadow: '0 2px 10px rgba(79,140,255,0.3)',\r\n+                zIndex: 500,\r\n+                transition: 'all 0.2s ease'\r\n+              }}\r\n+              onMouseOver={(e) => {\r\n+                e.currentTarget.style.background = '#3a7dff';\r\n+                e.currentTarget.style.transform = 'translateY(-2px)';\r\n+                e.currentTarget.style.boxShadow = '0 4px 12px rgba(79,140,255,0.4)';\r\n+              }}\r\n+              onMouseOut={(e) => {\r\n+                e.currentTarget.style.background = '#4f8cff';\r\n+                e.currentTarget.style.transform = 'translateY(0)';\r\n+                e.currentTarget.style.boxShadow = '0 2px 10px rgba(79,140,255,0.3)';\r\n+              }}\r\n+              title=\"Show map info\"\r\n+            >\r\n+              ‚ÑπÔ∏è Show Map Info\r\n+            </button>\r\n+          )}\r\n+          \r\n+          {/* Sidebar Control Buttons */}\r\n+          {/* Toggle Sidebar Button - Modern design behind sidebar */}\r\n+          <button\r\n+            onClick={() => setSidebarOpen(!sidebarOpen)}\r\n+            style={{\r\n+              position: 'fixed',\r\n+              top: '50%',\r\n+              [sidebarPosition === 'right' ? 'right' : 'left']: sidebarOpen ? '360px' : '0px',\r\n+              transform: 'translateY(-50%)',\r\n+              padding: '20px 8px',\r\n+              background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\r\n+              color: 'white',\r\n+              border: 'none',\r\n+              borderRadius: sidebarPosition === 'right' ? '8px 0 0 8px' : '0 8px 8px 0',\r\n+              cursor: 'pointer',\r\n+              boxShadow: sidebarPosition === 'right' ? '-4px 0 12px rgba(0,0,0,0.15)' : '4px 0 12px rgba(0,0,0,0.15)',\r\n+              zIndex: 999,\r\n+              transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',\r\n+              display: 'flex',\r\n+              alignItems: 'center',\r\n+              justifyContent: 'center',\r\n+              width: '32px',\r\n+              height: '80px',\r\n+              backdropFilter: 'blur(10px)',\r\n+              WebkitBackdropFilter: 'blur(10px)'\r\n+            }}\r\n+            onMouseOver={(e) => {\r\n+              e.currentTarget.style.background = 'linear-gradient(135deg, #764ba2 0%, #667eea 100%)';\r\n+              e.currentTarget.style.boxShadow = sidebarPosition === 'right' ? '-6px 0 16px rgba(102, 126, 234, 0.4)' : '6px 0 16px rgba(102, 126, 234, 0.4)';\r\n+              e.currentTarget.style.width = '36px';\r\n+            }}\r\n+            onMouseOut={(e) => {\r\n+              e.currentTarget.style.background = 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)';\r\n+              e.currentTarget.style.boxShadow = sidebarPosition === 'right' ? '-4px 0 12px rgba(0,0,0,0.15)' : '4px 0 12px rgba(0,0,0,0.15)';\r\n+              e.currentTarget.style.width = '32px';\r\n+            }}\r\n+            title={sidebarOpen ? 'Close Sidebar' : 'Open Sidebar'}\r\n+          >\r\n+            <span style={{ fontSize: '20px', fontWeight: 'bold' }}>\r\n+              {sidebarOpen ? (sidebarPosition === 'right' ? '‚Ä∫' : '‚Äπ') : (sidebarPosition === 'right' ? '‚Äπ' : '‚Ä∫')}\r\n+            </span>\r\n+          </button>\r\n         </>\r\n       )}\r\n-      <CountrySidebar onSearch={handleSearch} showMaps={false} />\r\n+      \r\n+      {/* Country Sidebar with dynamic positioning */}\r\n+      <div style={{\r\n+        position: 'fixed',\r\n+        top: '56px',\r\n+        [sidebarPosition]: sidebarOpen ? '0' : '-380px',\r\n+        height: 'calc(100vh - 56px)',\r\n+        width: '360px',\r\n+        transition: 'all 0.3s ease',\r\n+        zIndex: 1000\r\n+      }}>\r\n+        <CountrySidebar onSearch={handleSearch} showMaps={false} />\r\n+      </div>\r\n     </div>\r\n   );\r\n };\r\n \r\n"
                },
                {
                    "date": 1761125374499,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -489,40 +489,73 @@\n               position: 'fixed',\r\n               top: '50%',\r\n               [sidebarPosition === 'right' ? 'right' : 'left']: sidebarOpen ? '360px' : '0px',\r\n               transform: 'translateY(-50%)',\r\n-              padding: '20px 8px',\r\n+              padding: '0',\r\n               background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\r\n               color: 'white',\r\n               border: 'none',\r\n-              borderRadius: sidebarPosition === 'right' ? '8px 0 0 8px' : '0 8px 8px 0',\r\n+              borderRadius: sidebarPosition === 'right' ? '12px 0 0 12px' : '0 12px 12px 0',\r\n               cursor: 'pointer',\r\n-              boxShadow: sidebarPosition === 'right' ? '-4px 0 12px rgba(0,0,0,0.15)' : '4px 0 12px rgba(0,0,0,0.15)',\r\n+              boxShadow: sidebarPosition === 'right' \r\n+                ? '-4px 0 20px rgba(102, 126, 234, 0.35)' \r\n+                : '4px 0 20px rgba(102, 126, 234, 0.35)',\r\n               zIndex: 999,\r\n-              transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',\r\n+              transition: 'all 0.35s cubic-bezier(0.4, 0, 0.2, 1)',\r\n               display: 'flex',\r\n               alignItems: 'center',\r\n               justifyContent: 'center',\r\n-              width: '32px',\r\n-              height: '80px',\r\n+              width: '40px',\r\n+              height: '100px',\r\n               backdropFilter: 'blur(10px)',\r\n-              WebkitBackdropFilter: 'blur(10px)'\r\n+              WebkitBackdropFilter: 'blur(10px)',\r\n+              overflow: 'hidden'\r\n             }}\r\n             onMouseOver={(e) => {\r\n               e.currentTarget.style.background = 'linear-gradient(135deg, #764ba2 0%, #667eea 100%)';\r\n-              e.currentTarget.style.boxShadow = sidebarPosition === 'right' ? '-6px 0 16px rgba(102, 126, 234, 0.4)' : '6px 0 16px rgba(102, 126, 234, 0.4)';\r\n-              e.currentTarget.style.width = '36px';\r\n+              e.currentTarget.style.boxShadow = sidebarPosition === 'right' \r\n+                ? '-6px 0 25px rgba(118, 75, 162, 0.5)' \r\n+                : '6px 0 25px rgba(118, 75, 162, 0.5)';\r\n+              e.currentTarget.style.width = '46px';\r\n             }}\r\n             onMouseOut={(e) => {\r\n               e.currentTarget.style.background = 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)';\r\n-              e.currentTarget.style.boxShadow = sidebarPosition === 'right' ? '-4px 0 12px rgba(0,0,0,0.15)' : '4px 0 12px rgba(0,0,0,0.15)';\r\n-              e.currentTarget.style.width = '32px';\r\n+              e.currentTarget.style.boxShadow = sidebarPosition === 'right' \r\n+                ? '-4px 0 20px rgba(102, 126, 234, 0.35)' \r\n+                : '4px 0 20px rgba(102, 126, 234, 0.35)';\r\n+              e.currentTarget.style.width = '40px';\r\n             }}\r\n             title={sidebarOpen ? 'Close Sidebar' : 'Open Sidebar'}\r\n           >\r\n-            <span style={{ fontSize: '20px', fontWeight: 'bold' }}>\r\n-              {sidebarOpen ? (sidebarPosition === 'right' ? '‚Ä∫' : '‚Äπ') : (sidebarPosition === 'right' ? '‚Äπ' : '‚Ä∫')}\r\n-            </span>\r\n+            <div style={{\r\n+              display: 'flex',\r\n+              flexDirection: 'column',\r\n+              alignItems: 'center',\r\n+              justifyContent: 'center',\r\n+              gap: '4px'\r\n+            }}>\r\n+              {/* Animated chevron lines */}\r\n+              <div style={{\r\n+                width: '20px',\r\n+                height: '3px',\r\n+                background: 'white',\r\n+                borderRadius: '2px',\r\n+                transform: sidebarOpen \r\n+                  ? (sidebarPosition === 'right' ? 'rotate(45deg) translateY(7px)' : 'rotate(-45deg) translateY(7px)')\r\n+                  : (sidebarPosition === 'right' ? 'rotate(-45deg) translateY(7px)' : 'rotate(45deg) translateY(7px)'),\r\n+                transition: 'all 0.3s ease'\r\n+              }}></div>\r\n+              <div style={{\r\n+                width: '20px',\r\n+                height: '3px',\r\n+                background: 'white',\r\n+                borderRadius: '2px',\r\n+                transform: sidebarOpen \r\n+                  ? (sidebarPosition === 'right' ? 'rotate(-45deg) translateY(-7px)' : 'rotate(45deg) translateY(-7px)')\r\n+                  : (sidebarPosition === 'right' ? 'rotate(45deg) translateY(-7px)' : 'rotate(-45deg) translateY(-7px)'),\r\n+                transition: 'all 0.3s ease'\r\n+              }}></div>\r\n+            </div>\r\n           </button>\r\n         </>\r\n       )}\r\n       \r\n"
                },
                {
                    "date": 1761125594026,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -479,84 +479,8 @@\n             >\r\n               ‚ÑπÔ∏è Show Map Info\r\n             </button>\r\n           )}\r\n-          \r\n-          {/* Sidebar Control Buttons */}\r\n-          {/* Toggle Sidebar Button - Modern design behind sidebar */}\r\n-          <button\r\n-            onClick={() => setSidebarOpen(!sidebarOpen)}\r\n-            style={{\r\n-              position: 'fixed',\r\n-              top: '50%',\r\n-              [sidebarPosition === 'right' ? 'right' : 'left']: sidebarOpen ? '360px' : '0px',\r\n-              transform: 'translateY(-50%)',\r\n-              padding: '0',\r\n-              background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\r\n-              color: 'white',\r\n-              border: 'none',\r\n-              borderRadius: sidebarPosition === 'right' ? '12px 0 0 12px' : '0 12px 12px 0',\r\n-              cursor: 'pointer',\r\n-              boxShadow: sidebarPosition === 'right' \r\n-                ? '-4px 0 20px rgba(102, 126, 234, 0.35)' \r\n-                : '4px 0 20px rgba(102, 126, 234, 0.35)',\r\n-              zIndex: 999,\r\n-              transition: 'all 0.35s cubic-bezier(0.4, 0, 0.2, 1)',\r\n-              display: 'flex',\r\n-              alignItems: 'center',\r\n-              justifyContent: 'center',\r\n-              width: '40px',\r\n-              height: '100px',\r\n-              backdropFilter: 'blur(10px)',\r\n-              WebkitBackdropFilter: 'blur(10px)',\r\n-              overflow: 'hidden'\r\n-            }}\r\n-            onMouseOver={(e) => {\r\n-              e.currentTarget.style.background = 'linear-gradient(135deg, #764ba2 0%, #667eea 100%)';\r\n-              e.currentTarget.style.boxShadow = sidebarPosition === 'right' \r\n-                ? '-6px 0 25px rgba(118, 75, 162, 0.5)' \r\n-                : '6px 0 25px rgba(118, 75, 162, 0.5)';\r\n-              e.currentTarget.style.width = '46px';\r\n-            }}\r\n-            onMouseOut={(e) => {\r\n-              e.currentTarget.style.background = 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)';\r\n-              e.currentTarget.style.boxShadow = sidebarPosition === 'right' \r\n-                ? '-4px 0 20px rgba(102, 126, 234, 0.35)' \r\n-                : '4px 0 20px rgba(102, 126, 234, 0.35)';\r\n-              e.currentTarget.style.width = '40px';\r\n-            }}\r\n-            title={sidebarOpen ? 'Close Sidebar' : 'Open Sidebar'}\r\n-          >\r\n-            <div style={{\r\n-              display: 'flex',\r\n-              flexDirection: 'column',\r\n-              alignItems: 'center',\r\n-              justifyContent: 'center',\r\n-              gap: '4px'\r\n-            }}>\r\n-              {/* Animated chevron lines */}\r\n-              <div style={{\r\n-                width: '20px',\r\n-                height: '3px',\r\n-                background: 'white',\r\n-                borderRadius: '2px',\r\n-                transform: sidebarOpen \r\n-                  ? (sidebarPosition === 'right' ? 'rotate(45deg) translateY(7px)' : 'rotate(-45deg) translateY(7px)')\r\n-                  : (sidebarPosition === 'right' ? 'rotate(-45deg) translateY(7px)' : 'rotate(45deg) translateY(7px)'),\r\n-                transition: 'all 0.3s ease'\r\n-              }}></div>\r\n-              <div style={{\r\n-                width: '20px',\r\n-                height: '3px',\r\n-                background: 'white',\r\n-                borderRadius: '2px',\r\n-                transform: sidebarOpen \r\n-                  ? (sidebarPosition === 'right' ? 'rotate(-45deg) translateY(-7px)' : 'rotate(45deg) translateY(-7px)')\r\n-                  : (sidebarPosition === 'right' ? 'rotate(45deg) translateY(-7px)' : 'rotate(-45deg) translateY(-7px)'),\r\n-                transition: 'all 0.3s ease'\r\n-              }}></div>\r\n-            </div>\r\n-          </button>\r\n         </>\r\n       )}\r\n       \r\n       {/* Country Sidebar with dynamic positioning */}\r\n"
                },
                {
                    "date": 1761125607220,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,10 +23,8 @@\n   const [error, setError] = useState<string | null>(null);\r\n   const [hasUnsavedChanges, setHasUnsavedChanges] = useState(false);\r\n   const [mapData, setMapData] = useState<{title: string; description: string; map_code: string; map_id: number} | null>(null);\r\n   const [showMapInfo, setShowMapInfo] = useState(true);\r\n-  const [sidebarOpen, setSidebarOpen] = useState(true);\r\n-  const [sidebarPosition] = useState<'left' | 'right'>('right');\r\n   const [mapType, setMapType] = useState<'road' | 'satellite' | 'hybrid' | 'terrain'>('road');\r\n   \r\n   // Check if we're in edit mode\r\n   const isEditMode = location.pathname.startsWith('/edit-map/');\r\n"
                },
                {
                    "date": 1761125624903,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -480,20 +480,10 @@\n           )}\r\n         </>\r\n       )}\r\n       \r\n-      {/* Country Sidebar with dynamic positioning */}\r\n-      <div style={{\r\n-        position: 'fixed',\r\n-        top: '56px',\r\n-        [sidebarPosition]: sidebarOpen ? '0' : '-380px',\r\n-        height: 'calc(100vh - 56px)',\r\n-        width: '360px',\r\n-        transition: 'all 0.3s ease',\r\n-        zIndex: 1000\r\n-      }}>\r\n-        <CountrySidebar onSearch={handleSearch} showMaps={false} />\r\n-      </div>\r\n+      {/* Country Sidebar - has its own toggle button */}\r\n+      <CountrySidebar onSearch={handleSearch} showMaps={false} />\r\n     </div>\r\n   );\r\n };\r\n \r\n"
                },
                {
                    "date": 1761128615989,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,11 +25,14 @@\n   const [mapData, setMapData] = useState<{title: string; description: string; map_code: string; map_id: number} | null>(null);\r\n   const [showMapInfo, setShowMapInfo] = useState(true);\r\n   const [mapType, setMapType] = useState<'road' | 'satellite' | 'hybrid' | 'terrain'>('road');\r\n   \r\n-  // Check if we're in edit mode\r\n-  const isEditMode = location.pathname.startsWith('/edit-map/');\r\n+  // Check if user is admin (view-only mode for admin)\r\n+  const isAdmin = localStorage.getItem('isAdmin') === 'true';\r\n   \r\n+  // Check if we're in edit mode (and not admin)\r\n+  const isEditMode = location.pathname.startsWith('/edit-map/') && !isAdmin;\r\n+  \r\n   // Save function for edit mode (stable identity)\r\n   const handleSaveMap = React.useCallback(async (): Promise<void> => {\r\n     if (!isEditMode || !id || !mapData) {\r\n       console.log('Cannot save: not in edit mode, no ID, or no map data');\r\n"
                },
                {
                    "date": 1761129108459,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -399,31 +399,31 @@\n               )}\r\n               \r\n               {!isEditMode && (\r\n                 <button\r\n-                  onClick={() => navigate('/dashboard')}\r\n+                  onClick={() => navigate(isAdmin ? '/admin/dashboard' : '/dashboard')}\r\n                   style={{\r\n                     marginTop: '12px',\r\n                     width: '100%',\r\n                     padding: '10px',\r\n-                    background: '#4f8cff',\r\n+                    background: isAdmin ? '#667eea' : '#4f8cff',\r\n                     color: 'white',\r\n                     border: 'none',\r\n                     borderRadius: '6px',\r\n                     cursor: 'pointer',\r\n                     fontWeight: '600',\r\n                     fontSize: '14px',\r\n                     transition: 'all 0.2s ease',\r\n-                    boxShadow: '0 2px 8px rgba(79,140,255,0.3)'\r\n+                    boxShadow: isAdmin ? '0 2px 8px rgba(102,126,234,0.3)' : '0 2px 8px rgba(79,140,255,0.3)'\r\n                   }}\r\n                   onMouseOver={(e) => {\r\n-                    e.currentTarget.style.background = '#3a7dff';\r\n+                    e.currentTarget.style.background = isAdmin ? '#5568d3' : '#3a7dff';\r\n                   }}\r\n                   onMouseOut={(e) => {\r\n-                    e.currentTarget.style.background = '#4f8cff';\r\n+                    e.currentTarget.style.background = isAdmin ? '#667eea' : '#4f8cff';\r\n                   }}\r\n                 >\r\n-                  ‚Üê Back to Dashboard\r\n+                  ‚Üê Back to {isAdmin ? 'Admin' : ''} Dashboard\r\n                 </button>\r\n               )}\r\n               \r\n               <div style={{ \r\n"
                },
                {
                    "date": 1761129404502,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -483,10 +483,10 @@\n           )}\r\n         </>\r\n       )}\r\n       \r\n-      {/* Country Sidebar - has its own toggle button */}\r\n-      <CountrySidebar onSearch={handleSearch} showMaps={false} />\r\n+      {/* Country Sidebar - has its own toggle button - Hide for admin */}\r\n+      {!isAdmin && <CountrySidebar onSearch={handleSearch} showMaps={false} />}\r\n     </div>\r\n   );\r\n };\r\n \r\n"
                },
                {
                    "date": 1761129423633,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -279,9 +279,10 @@\n   `;\r\n \r\n   return (\r\n     <div style={{ width: '100vw', height: '100vh', position: 'relative' }}>\r\n-      <AppNavBar onSaveMap={isEditMode ? handleAutoSave : undefined} />\r\n+      {/* Hide navbar for admin viewers */}\r\n+      {!isAdmin && <AppNavBar onSaveMap={isEditMode ? handleAutoSave : undefined} />}\r\n       <style>{styles}</style>\r\n       {loading ? (\r\n         <div className=\"loading-container\">\r\n           <div className=\"loading-spinner\"></div>\r\n"
                },
                {
                    "date": 1761129720895,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -279,10 +279,9 @@\n   `;\r\n \r\n   return (\r\n     <div style={{ width: '100vw', height: '100vh', position: 'relative' }}>\r\n-      {/* Hide navbar for admin viewers */}\r\n-      {!isAdmin && <AppNavBar onSaveMap={isEditMode ? handleAutoSave : undefined} />}\r\n+      <AppNavBar onSaveMap={isEditMode ? handleAutoSave : undefined} />\r\n       <style>{styles}</style>\r\n       {loading ? (\r\n         <div className=\"loading-container\">\r\n           <div className=\"loading-spinner\"></div>\r\n@@ -484,9 +483,9 @@\n           )}\r\n         </>\r\n       )}\r\n       \r\n-      {/* Country Sidebar - has its own toggle button - Hide for admin */}\r\n+      {/* Country Sidebar - hide for admin users (view-only mode) */}\r\n       {!isAdmin && <CountrySidebar onSearch={handleSearch} showMaps={false} />}\r\n     </div>\r\n   );\r\n };\r\n"
                },
                {
                    "date": 1761129794217,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -302,8 +302,9 @@\n             mapId={id ? parseInt(id) : undefined}\r\n             onZoneCreated={handleZoneChange}\r\n             initialMapType={mapType}\r\n             onMapTypeChange={setMapType}\r\n+            isViewOnly={isAdmin}\r\n           />\r\n           \r\n           {/* Map Info Overlay showing title, description, and map code */}\r\n           {mapData && showMapInfo && (\r\n"
                },
                {
                    "date": 1761129964753,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -279,9 +279,9 @@\n   `;\r\n \r\n   return (\r\n     <div style={{ width: '100vw', height: '100vh', position: 'relative' }}>\r\n-      <AppNavBar onSaveMap={isEditMode ? handleAutoSave : undefined} />\r\n+      <AppNavBar onSaveMap={isEditMode ? handleAutoSave : undefined} isAdminViewing={isAdmin} />\r\n       <style>{styles}</style>\r\n       {loading ? (\r\n         <div className=\"loading-container\">\r\n           <div className=\"loading-spinner\"></div>\r\n"
                },
                {
                    "date": 1761130057181,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -182,8 +182,22 @@\n       console.log('‚ö†Ô∏è  Map has unsaved changes');\r\n     }\r\n   };\r\n \r\n+  // Handle zone click - zoom to zone (for admin viewing)\r\n+  const handleZoneClick = (zone: {id: string; name: string; color: string; coordinates: [number, number][];}) => {\r\n+    if (zone.coordinates && zone.coordinates.length > 0) {\r\n+      // Calculate center of the zone\r\n+      const lats = zone.coordinates.map(coord => coord[0]);\r\n+      const lngs = zone.coordinates.map(coord => coord[1]);\r\n+      const centerLat = (Math.max(...lats) + Math.min(...lats)) / 2;\r\n+      const centerLng = (Math.max(...lngs) + Math.min(...lngs)) / 2;\r\n+      \r\n+      // Zoom to zone center\r\n+      setMapPosition({ lat: centerLat, lng: centerLng, zoom: 13 });\r\n+    }\r\n+  };\r\n+\r\n   // Add CSS for loading and info overlay\r\n   const styles = `\r\n     .loading-container {\r\n       position: fixed;\r\n"
                },
                {
                    "date": 1761130077949,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -289,8 +289,120 @@\n       border-radius: 4px;\r\n       color: #333;\r\n       border: 1px solid #ddd;\r\n     }\r\n+\r\n+    /* Admin zones panel */\r\n+    .admin-zones-panel {\r\n+      position: fixed;\r\n+      top: 76px;\r\n+      right: 20px;\r\n+      width: 280px;\r\n+      max-height: calc(100vh - 96px);\r\n+      background: rgba(255, 255, 255, 0.98);\r\n+      border-radius: 16px;\r\n+      box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);\r\n+      z-index: 600;\r\n+      overflow: hidden;\r\n+      backdrop-filter: blur(10px);\r\n+    }\r\n+\r\n+    .admin-zones-header {\r\n+      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n+      color: white;\r\n+      padding: 16px;\r\n+      font-weight: 700;\r\n+      font-size: 16px;\r\n+      display: flex;\r\n+      align-items: center;\r\n+      gap: 8px;\r\n+    }\r\n+\r\n+    .admin-zones-list {\r\n+      max-height: calc(100vh - 180px);\r\n+      overflow-y: auto;\r\n+      padding: 12px;\r\n+    }\r\n+\r\n+    .admin-zone-item {\r\n+      background: white;\r\n+      border: 2px solid #e0e0e0;\r\n+      border-radius: 12px;\r\n+      padding: 12px;\r\n+      margin-bottom: 10px;\r\n+      cursor: pointer;\r\n+      transition: all 0.2s ease;\r\n+      display: flex;\r\n+      align-items: center;\r\n+      gap: 12px;\r\n+    }\r\n+\r\n+    .admin-zone-item:hover {\r\n+      border-color: #667eea;\r\n+      transform: translateX(-4px);\r\n+      box-shadow: 0 4px 12px rgba(102, 126, 234, 0.2);\r\n+    }\r\n+\r\n+    .admin-zone-color {\r\n+      width: 40px;\r\n+      height: 40px;\r\n+      border-radius: 8px;\r\n+      flex-shrink: 0;\r\n+      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n+    }\r\n+\r\n+    .admin-zone-info {\r\n+      flex: 1;\r\n+      min-width: 0;\r\n+    }\r\n+\r\n+    .admin-zone-name {\r\n+      font-weight: 600;\r\n+      font-size: 14px;\r\n+      color: #1a202c;\r\n+      margin-bottom: 4px;\r\n+      white-space: nowrap;\r\n+      overflow: hidden;\r\n+      text-overflow: ellipsis;\r\n+    }\r\n+\r\n+    .admin-zone-id {\r\n+      font-size: 11px;\r\n+      color: #718096;\r\n+      font-family: 'Courier New', monospace;\r\n+    }\r\n+\r\n+    .admin-zones-empty {\r\n+      text-align: center;\r\n+      padding: 40px 20px;\r\n+      color: #a0aec0;\r\n+    }\r\n+\r\n+    .admin-zones-empty svg {\r\n+      width: 48px;\r\n+      height: 48px;\r\n+      margin-bottom: 12px;\r\n+      opacity: 0.5;\r\n+    }\r\n+\r\n+    /* Scrollbar styling for zones list */\r\n+    .admin-zones-list::-webkit-scrollbar {\r\n+      width: 6px;\r\n+    }\r\n+\r\n+    .admin-zones-list::-webkit-scrollbar-track {\r\n+      background: #f1f1f1;\r\n+      border-radius: 10px;\r\n+    }\r\n+\r\n+    .admin-zones-list::-webkit-scrollbar-thumb {\r\n+      background: #667eea;\r\n+      border-radius: 10px;\r\n+    }\r\n+\r\n+    .admin-zones-list::-webkit-scrollbar-thumb:hover {\r\n+      background: #5568d3;\r\n+    }\r\n   `;\r\n \r\n   return (\r\n     <div style={{ width: '100vw', height: '100vh', position: 'relative' }}>\r\n"
                },
                {
                    "date": 1761130378497,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -610,8 +610,57 @@\n           )}\r\n         </>\r\n       )}\r\n       \r\n+      {/* Admin Zones Panel - show list of zones for admin to view and zoom to */}\r\n+      {isAdmin && zones.length > 0 && (\r\n+        <div className=\"admin-zones-panel\">\r\n+          <div className=\"admin-zones-header\">\r\n+            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" width=\"20\" height=\"20\">\r\n+              <path d=\"M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7zm0 9.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5z\"/>\r\n+            </svg>\r\n+            Zones ({zones.length})\r\n+          </div>\r\n+          <div className=\"admin-zones-list\">\r\n+            {zones.map((zone) => (\r\n+              <div\r\n+                key={zone.id}\r\n+                className=\"admin-zone-item\"\r\n+                onClick={() => handleZoneClick(zone)}\r\n+                title=\"Click to zoom to this zone\"\r\n+              >\r\n+                <div\r\n+                  className=\"admin-zone-color\"\r\n+                  style={{ backgroundColor: zone.color }}\r\n+                ></div>\r\n+                <div className=\"admin-zone-info\">\r\n+                  <div className=\"admin-zone-name\">{zone.name}</div>\r\n+                  <div className=\"admin-zone-id\">ID: {zone.id.substring(0, 8)}</div>\r\n+                </div>\r\n+              </div>\r\n+            ))}\r\n+          </div>\r\n+        </div>\r\n+      )}\r\n+\r\n+      {/* Admin empty zones message */}\r\n+      {isAdmin && zones.length === 0 && !loading && (\r\n+        <div className=\"admin-zones-panel\">\r\n+          <div className=\"admin-zones-header\">\r\n+            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" width=\"20\" height=\"20\">\r\n+              <path d=\"M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7zm0 9.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5z\"/>\r\n+            </svg>\r\n+            Zones (0)\r\n+          </div>\r\n+          <div className=\"admin-zones-empty\">\r\n+            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\r\n+              <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-2h2v2zm0-4h-2V7h2v6z\"/>\r\n+            </svg>\r\n+            <p>No zones in this map</p>\r\n+          </div>\r\n+        </div>\r\n+      )}\r\n+      \r\n       {/* Country Sidebar - hide for admin users (view-only mode) */}\r\n       {!isAdmin && <CountrySidebar onSearch={handleSearch} showMaps={false} />}\r\n     </div>\r\n   );\r\n"
                }
            ],
            "date": 1760438405896,
            "name": "Commit-0",
            "content": "import React, { useState, useEffect } from 'react';\r\nimport { useParams, useLocation } from 'react-router-dom';\r\nimport WorldMap from '../components/WorldMap';\r\nimport CountrySidebar from '../components/CountrySidebar';\r\nimport AppNavBar from '../components/AppNavBar';\r\n\r\n// MapPageWithSidebar component to display a map with sidebar for navigation\r\n\r\n\r\nconst MapPageWithSidebar: React.FC = () => {\r\n  const { id } = useParams<{ id: string }>();\r\n  const location = useLocation();\r\n  const [mapPosition, setMapPosition] = useState({\r\n    lat: 20,\r\n    lng: 0,\r\n    zoom: 2\r\n  });\r\n  // We no longer need cityMarkers as WorldMap component was updated\r\n  const [highlightedCountry, setHighlightedCountry] = useState<string | undefined>(undefined);\r\n  const [zones, setZones] = useState<Array<{id: string; name: string; color: string; coordinates: [number, number][];}>>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [hasUnsavedChanges, setHasUnsavedChanges] = useState(false);\r\n  \r\n  // Check if we're in edit mode\r\n  const isEditMode = location.pathname.startsWith('/edit-map/');\r\n  \r\n  // Auto-save function for edit mode\r\n  const handleAutoSave = async (): Promise<void> => {\r\n    if (!isEditMode || !hasUnsavedChanges || !id) {\r\n      return; // Nothing to save or not in edit mode\r\n    }\r\n    \r\n    try {\r\n      // Add your save logic here - similar to CreateMapPage\r\n      console.log('Auto-saving map changes...');\r\n      setHasUnsavedChanges(false);\r\n    } catch (error) {\r\n      console.error('Auto-save failed:', error);\r\n      throw error;\r\n    }\r\n  };\r\n  \r\n  // Load map data if ID is provided\r\n  useEffect(() => {\r\n    if (id) {\r\n      const fetchMapData = async () => {\r\n        try {\r\n          setLoading(true);\r\n          console.log(`Loading map data for ID: ${id}`);\r\n          \r\n          // Use the correct API endpoint\r\n          const response = await fetch(`/api/map/${id}`);\r\n          const data = await response.json();\r\n          \r\n          console.log('Map data response:', data);\r\n          \r\n          if (data.success && data.map) {\r\n            const mapData = data.map;\r\n            \r\n            // Set map position from saved data\r\n            if (mapData.map_data) {\r\n              setMapPosition({\r\n                lat: mapData.map_data.lat || 20,\r\n                lng: mapData.map_data.lng || 0,\r\n                zoom: mapData.map_data.zoom || 2\r\n              });\r\n            }\r\n            \r\n            // Set highlighted country if available\r\n            if (mapData.country) {\r\n              setHighlightedCountry(mapData.country);\r\n            }\r\n            \r\n            // Load zones for this map\r\n            try {\r\n              const zonesResponse = await fetch(`/api/map/${id}/zones`);\r\n              const zonesData = await zonesResponse.json();\r\n              \r\n              if (zonesData.success && Array.isArray(zonesData.zones)) {\r\n                console.log('Loaded zones:', zonesData.zones);\r\n                setZones(zonesData.zones);\r\n              } else {\r\n                console.log('No zones found for this map');\r\n                setZones([]);\r\n              }\r\n            } catch (zoneError) {\r\n              console.error('Error loading zones:', zoneError);\r\n              setZones([]);\r\n            }\r\n          } else {\r\n            setError(data.error || 'Map not found');\r\n          }\r\n        } catch (err) {\r\n          console.error('Error loading map data:', err);\r\n          setError('Error loading map data');\r\n        } finally {\r\n          setLoading(false);\r\n        }\r\n      };\r\n      \r\n      fetchMapData();\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  }, [id]);\r\n\r\n  // Handle search results from the sidebar\r\n  const handleSearch = (lat: number, lng: number, zoom: number, countryName?: string) => {\r\n    setMapPosition({ lat, lng, zoom });\r\n    setHighlightedCountry(countryName);\r\n  };\r\n\r\n  // Add CSS for loading and info overlay\r\n  const styles = `\r\n    .loading-container {\r\n      position: fixed;\r\n      top: 0;\r\n      left: 0;\r\n      width: 100vw;\r\n      height: 100vh;\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: center;\r\n      align-items: center;\r\n      background: rgba(255, 255, 255, 0.9);\r\n      z-index: 1000;\r\n      color: #333;\r\n    }\r\n\r\n    .loading-spinner {\r\n      width: 50px;\r\n      height: 50px;\r\n      border: 5px solid #f3f3f3;\r\n      border-top: 5px solid #4285F4;\r\n      border-radius: 50%;\r\n      animation: spin 1s linear infinite;\r\n      margin-bottom: 15px;\r\n    }\r\n\r\n    @keyframes spin {\r\n      0% { transform: rotate(0deg); }\r\n      100% { transform: rotate(360deg); }\r\n    }\r\n\r\n    .error-container {\r\n      position: fixed;\r\n      top: 50%;\r\n      left: 50%;\r\n      transform: translate(-50%, -50%);\r\n      padding: 20px;\r\n      background: white;\r\n      border-radius: 8px;\r\n      box-shadow: 0 4px 12px rgba(0,0,0,0.1);\r\n      text-align: center;\r\n      color: #d32f2f;\r\n    }\r\n\r\n    .map-info-overlay {\r\n      position: fixed;\r\n      bottom: 20px;\r\n      left: 10px;\r\n      width: 280px;\r\n      padding: 12px;\r\n      background: rgba(255, 255, 255, 0.95);\r\n      border-radius: 8px;\r\n      box-shadow: 0 2px 10px rgba(0,0,0,0.15);\r\n      z-index: 500;\r\n      color: #000;\r\n      backdrop-filter: blur(5px);\r\n    }\r\n\r\n    .map-info-overlay h3 {\r\n      margin-top: 0;\r\n      margin-bottom: 8px;\r\n      color: #000;\r\n    }\r\n\r\n    .map-info-overlay p {\r\n      margin: 0 0 10px;\r\n      color: #555;\r\n      font-size: 14px;\r\n    }\r\n\r\n    .map-code-display {\r\n      display: flex;\r\n      flex-direction: column;\r\n      gap: 4px;\r\n    }\r\n\r\n    .map-code-label {\r\n      font-size: 12px;\r\n      font-weight: 600;\r\n      color: #666;\r\n      text-transform: uppercase;\r\n    }\r\n\r\n    .map-code-value {\r\n      font-family: 'Courier New', monospace;\r\n      font-size: 13px;\r\n      padding: 4px 8px;\r\n      background: #f5f5f5;\r\n      border-radius: 4px;\r\n      color: #333;\r\n      border: 1px solid #ddd;\r\n    }\r\n  `;\r\n\r\n  return (\r\n    <div style={{ width: '100vw', height: '100vh', position: 'relative' }}>\r\n      <AppNavBar onSaveMap={isEditMode ? handleAutoSave : undefined} />\r\n      <style>{styles}</style>\r\n      {loading ? (\r\n        <div className=\"loading-container\">\r\n          <div className=\"loading-spinner\"></div>\r\n          <p>Loading map...</p>\r\n        </div>\r\n      ) : error ? (\r\n        <div className=\"error-container\">\r\n          <p>{error}</p>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <WorldMap \r\n            lat={mapPosition.lat} \r\n            lng={mapPosition.lng} \r\n            zoom={mapPosition.zoom}\r\n            highlightedCountry={highlightedCountry}\r\n            initialZones={zones}\r\n            mapId={id ? parseInt(id) : undefined}\r\n          />\r\n        </>\r\n      )}\r\n      <CountrySidebar onSearch={handleSearch} showMaps={false} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapPageWithSidebar;"
        }
    ]
}