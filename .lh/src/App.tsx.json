{
    "sourceFile": "src/App.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1760433584602,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1761127509487,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-﻿import React, { useState } from 'react';\n+import React, { useState } from 'react';\n import './App.css';\n import './AppNavBar.css';\n \n import { BrowserRouter as Router, Routes, Route, Link, useNavigate } from 'react-router-dom';\n"
                },
                {
                    "date": 1761127816478,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-﻿import React, { useState } from 'react';\n+import React, { useState } from 'react';\n import './App.css';\n import './AppNavBar.css';\n \n import { BrowserRouter as Router, Routes, Route, Link, useNavigate } from 'react-router-dom';\n"
                }
            ],
            "date": 1760433584602,
            "name": "Commit-0",
            "content": "import React, { useState } from 'react';\nimport './App.css';\nimport './AppNavBar.css';\n\nimport { BrowserRouter as Router, Routes, Route, Link, useNavigate } from 'react-router-dom';\nimport RegisterPage from './pages/RegisterPage';\nimport MapPageWithSidebar from './pages/MapPageWithSidebar';\nimport DashboardPage from './pages/DashboardPage';\nimport CreateMapPageWithBoundary from './pages/CreateMapPage';\nimport { AuthProvider } from './AuthContext';\nimport { useAuth } from './hooks/useAuth';\n\nconst LoginPage = ({ onLogin }: { onLogin: () => void }) => {\n  const [form, setForm] = useState({ email: '', password: '' });\n  const [status, setStatus] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const { login } = useAuth();\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setForm({ ...form, [e.target.name]: e.target.value });\n    setError(''); // Clear error when user types\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setStatus('Logging in...');\n    setError('');\n    \n    try {\n      console.log(`Trying to login via /api/login`);\n      const response = await fetch('/api/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          email: form.email,\n          password: form.password\n        }),\n        signal: AbortSignal.timeout(5000)\n      });\n      \n      // Check if response has content before parsing JSON\n      const text = await response.text();\n      console.log('Login response text:', text);\n      \n      let data;\n      try {\n        data = text ? JSON.parse(text) : {};\n      } catch (parseError) {\n        console.error('Failed to parse response:', parseError);\n        throw new Error('Invalid response from server');\n      }\n    \n      if (!response.ok || !data.success) {\n        throw new Error(data.error || `Login failed with status ${response.status}`);\n      }\n      \n      // Login was successful\n      console.log('Login successful');\n      \n      // Use the login function from AuthContext\n      login(data.user);\n      \n      setStatus('');\n      onLogin();\n      navigate('/');\n    } catch (err) {\n      console.error('Login error:', err);\n      setError(err instanceof Error ? err.message : 'Login failed. Please try again.');\n      setStatus('');\n    }\n  };\n\n  return (\n    <div className=\"form-container\">\n      <h2>Login</h2>\n      <form onSubmit={handleSubmit}>\n        <input type=\"email\" name=\"email\" placeholder=\"Email\" value={form.email} onChange={handleChange} required />\n        <input type=\"password\" name=\"password\" placeholder=\"Password\" value={form.password} onChange={handleChange} required />\n        <button type=\"submit\" disabled={status !== ''}>Login</button>\n      </form>\n      {status && <div className=\"status\">{status}</div>}\n      {error && <div className=\"error\">{error}</div>}\n      <p>Do not have an account? <Link to=\"/register\">Register</Link></p>\n    </div>\n  );\n};\n\nconst HomePage = () => {\n  // This component renders the DashboardPage for both / and /dashboard routes\n  return <DashboardPage />;\n};\n\n// Routes component that uses AuthContext\nconst AppRoutes = () => {\n  const { isLoggedIn } = useAuth();\n\n  return (\n    <Routes>\n      <Route path=\"/register\" element={<RegisterPage />} />\n      <Route path=\"register\" element={<RegisterPage />} />\n      <Route path=\"/login\" element={<LoginPage onLogin={() => {}} />} />\n      <Route path=\"login\" element={<LoginPage onLogin={() => {}} />} />\n      <Route path=\"/dashboard\" element={isLoggedIn ? <HomePage /> : <LoginPage onLogin={() => {}} />} />\n      <Route path=\"/create-map\" element={isLoggedIn ? <CreateMapPageWithBoundary /> : <LoginPage onLogin={() => {}} />} />\n      <Route path=\"/view-map/:id\" element={isLoggedIn ? <MapPageWithSidebar /> : <LoginPage onLogin={() => {}} />} />\n      <Route path=\"/edit-map/:id\" element={isLoggedIn ? <MapPageWithSidebar /> : <LoginPage onLogin={() => {}} />} />\n      <Route path=\"/\" element={isLoggedIn ? <HomePage /> : <LoginPage onLogin={() => {}} />} />\n    </Routes>\n  );\n};\n\nconst App = () => {\n  return (\n    <AuthProvider>\n      <Router>\n        <AppRoutes />\n      </Router>\n    </AuthProvider>\n  );\n};\n\nexport default App;\n"
        }
    ]
}