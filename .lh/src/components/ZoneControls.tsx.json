{
    "sourceFile": "src/components/ZoneControls.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 7,
            "patches": [
                {
                    "date": 1761125908641,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1761125976441,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,62 +57,63 @@\n       <button\r\n         onClick={() => setIsOpen(!isOpen)}\r\n         style={{\r\n           position: 'absolute',\r\n-          top: '80px',\r\n+          top: '50%',\r\n           left: isOpen ? '360px' : '0px',\r\n+          transform: 'translateY(-50%)',\r\n           padding: '0',\r\n           background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\r\n           color: 'white',\r\n           border: 'none',\r\n-          borderRadius: '0 12px 12px 0',\r\n+          borderRadius: '0 10px 10px 0',\r\n           cursor: 'pointer',\r\n-          boxShadow: '4px 0 20px rgba(102, 126, 234, 0.35)',\r\n-          transition: 'all 0.35s cubic-bezier(0.4, 0, 0.2, 1)',\r\n+          boxShadow: '4px 0 16px rgba(102, 126, 234, 0.3)',\r\n+          transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',\r\n           zIndex: 999,\r\n           display: 'flex',\r\n           alignItems: 'center',\r\n           justifyContent: 'center',\r\n-          width: '40px',\r\n-          height: '100px',\r\n+          width: '36px',\r\n+          height: '80px',\r\n           backdropFilter: 'blur(10px)',\r\n           WebkitBackdropFilter: 'blur(10px)',\r\n           overflow: 'hidden'\r\n         }}\r\n         onMouseOver={(e) => {\r\n           e.currentTarget.style.background = 'linear-gradient(135deg, #764ba2 0%, #667eea 100%)';\r\n-          e.currentTarget.style.boxShadow = '6px 0 25px rgba(118, 75, 162, 0.5)';\r\n-          e.currentTarget.style.width = '46px';\r\n+          e.currentTarget.style.boxShadow = '6px 0 20px rgba(118, 75, 162, 0.45)';\r\n+          e.currentTarget.style.width = '40px';\r\n         }}\r\n         onMouseOut={(e) => {\r\n           e.currentTarget.style.background = 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)';\r\n-          e.currentTarget.style.boxShadow = '4px 0 20px rgba(102, 126, 234, 0.35)';\r\n-          e.currentTarget.style.width = '40px';\r\n+          e.currentTarget.style.boxShadow = '4px 0 16px rgba(102, 126, 234, 0.3)';\r\n+          e.currentTarget.style.width = '36px';\r\n         }}\r\n         title={isOpen ? 'Hide Controls' : 'Show Controls'}\r\n       >\r\n         <div style={{\r\n           display: 'flex',\r\n           flexDirection: 'column',\r\n           alignItems: 'center',\r\n           justifyContent: 'center',\r\n-          gap: '4px'\r\n+          gap: '3px'\r\n         }}>\r\n           {/* Animated chevron lines */}\r\n           <div style={{\r\n-            width: '20px',\r\n-            height: '3px',\r\n+            width: '18px',\r\n+            height: '2.5px',\r\n             background: 'white',\r\n             borderRadius: '2px',\r\n-            transform: isOpen ? 'rotate(-45deg) translateY(7px)' : 'rotate(45deg) translateY(7px)',\r\n+            transform: isOpen ? 'rotate(-45deg) translateY(6px)' : 'rotate(45deg) translateY(6px)',\r\n             transition: 'all 0.3s ease'\r\n           }}></div>\r\n           <div style={{\r\n-            width: '20px',\r\n-            height: '3px',\r\n+            width: '18px',\r\n+            height: '2.5px',\r\n             background: 'white',\r\n             borderRadius: '2px',\r\n-            transform: isOpen ? 'rotate(45deg) translateY(-7px)' : 'rotate(-45deg) translateY(-7px)',\r\n+            transform: isOpen ? 'rotate(45deg) translateY(-6px)' : 'rotate(-45deg) translateY(-6px)',\r\n             transition: 'all 0.3s ease'\r\n           }}></div>\r\n         </div>\r\n       </button>\r\n"
                },
                {
                    "date": 1761126063282,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -95,25 +95,25 @@\n           display: 'flex',\r\n           flexDirection: 'column',\r\n           alignItems: 'center',\r\n           justifyContent: 'center',\r\n-          gap: '3px'\r\n+          gap: '2px'\r\n         }}>\r\n           {/* Animated chevron lines */}\r\n           <div style={{\r\n-            width: '18px',\r\n-            height: '2.5px',\r\n+            width: '14px',\r\n+            height: '2px',\r\n             background: 'white',\r\n-            borderRadius: '2px',\r\n-            transform: isOpen ? 'rotate(-45deg) translateY(6px)' : 'rotate(45deg) translateY(6px)',\r\n+            borderRadius: '1.5px',\r\n+            transform: isOpen ? 'rotate(-45deg) translateY(5px)' : 'rotate(45deg) translateY(5px)',\r\n             transition: 'all 0.3s ease'\r\n           }}></div>\r\n           <div style={{\r\n-            width: '18px',\r\n-            height: '2.5px',\r\n+            width: '14px',\r\n+            height: '2px',\r\n             background: 'white',\r\n-            borderRadius: '2px',\r\n-            transform: isOpen ? 'rotate(45deg) translateY(-6px)' : 'rotate(-45deg) translateY(-6px)',\r\n+            borderRadius: '1.5px',\r\n+            transform: isOpen ? 'rotate(45deg) translateY(-5px)' : 'rotate(-45deg) translateY(-5px)',\r\n             transition: 'all 0.3s ease'\r\n           }}></div>\r\n         </div>\r\n       </button>\r\n"
                },
                {
                    "date": 1761126505527,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,56 +64,56 @@\n           padding: '0',\r\n           background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\r\n           color: 'white',\r\n           border: 'none',\r\n-          borderRadius: '0 10px 10px 0',\r\n+          borderRadius: '0 8px 8px 0',\r\n           cursor: 'pointer',\r\n-          boxShadow: '4px 0 16px rgba(102, 126, 234, 0.3)',\r\n+          boxShadow: '4px 0 12px rgba(102, 126, 234, 0.3)',\r\n           transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',\r\n           zIndex: 999,\r\n           display: 'flex',\r\n           alignItems: 'center',\r\n           justifyContent: 'center',\r\n-          width: '36px',\r\n-          height: '80px',\r\n+          width: '32px',\r\n+          height: '70px',\r\n           backdropFilter: 'blur(10px)',\r\n           WebkitBackdropFilter: 'blur(10px)',\r\n           overflow: 'hidden'\r\n         }}\r\n         onMouseOver={(e) => {\r\n           e.currentTarget.style.background = 'linear-gradient(135deg, #764ba2 0%, #667eea 100%)';\r\n-          e.currentTarget.style.boxShadow = '6px 0 20px rgba(118, 75, 162, 0.45)';\r\n-          e.currentTarget.style.width = '40px';\r\n+          e.currentTarget.style.boxShadow = '6px 0 16px rgba(118, 75, 162, 0.45)';\r\n+          e.currentTarget.style.width = '36px';\r\n         }}\r\n         onMouseOut={(e) => {\r\n           e.currentTarget.style.background = 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)';\r\n-          e.currentTarget.style.boxShadow = '4px 0 16px rgba(102, 126, 234, 0.3)';\r\n-          e.currentTarget.style.width = '36px';\r\n+          e.currentTarget.style.boxShadow = '4px 0 12px rgba(102, 126, 234, 0.3)';\r\n+          e.currentTarget.style.width = '32px';\r\n         }}\r\n         title={isOpen ? 'Hide Controls' : 'Show Controls'}\r\n       >\r\n         <div style={{\r\n           display: 'flex',\r\n           flexDirection: 'column',\r\n           alignItems: 'center',\r\n           justifyContent: 'center',\r\n-          gap: '2px'\r\n+          gap: '1.5px'\r\n         }}>\r\n           {/* Animated chevron lines */}\r\n           <div style={{\r\n-            width: '14px',\r\n+            width: '12px',\r\n             height: '2px',\r\n             background: 'white',\r\n-            borderRadius: '1.5px',\r\n-            transform: isOpen ? 'rotate(-45deg) translateY(5px)' : 'rotate(45deg) translateY(5px)',\r\n+            borderRadius: '1px',\r\n+            transform: isOpen ? 'rotate(-45deg) translateY(4.5px)' : 'rotate(45deg) translateY(4.5px)',\r\n             transition: 'all 0.3s ease'\r\n           }}></div>\r\n           <div style={{\r\n-            width: '14px',\r\n+            width: '12px',\r\n             height: '2px',\r\n             background: 'white',\r\n-            borderRadius: '1.5px',\r\n-            transform: isOpen ? 'rotate(45deg) translateY(-5px)' : 'rotate(-45deg) translateY(-5px)',\r\n+            borderRadius: '1px',\r\n+            transform: isOpen ? 'rotate(45deg) translateY(-4.5px)' : 'rotate(-45deg) translateY(-4.5px)',\r\n             transition: 'all 0.3s ease'\r\n           }}></div>\r\n         </div>\r\n       </button>\r\n"
                },
                {
                    "date": 1761126984163,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,64 +56,64 @@\n       {/* Toggle Button - Modern Design */}\r\n       <button\r\n         onClick={() => setIsOpen(!isOpen)}\r\n         style={{\r\n-          position: 'absolute',\r\n+          position: 'fixed',\r\n           top: '50%',\r\n-          left: isOpen ? '360px' : '0px',\r\n+          left: isOpen ? '372px' : '16px',\r\n           transform: 'translateY(-50%)',\r\n           padding: '0',\r\n           background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\r\n           color: 'white',\r\n           border: 'none',\r\n-          borderRadius: '0 8px 8px 0',\r\n+          borderRadius: '0 10px 10px 0',\r\n           cursor: 'pointer',\r\n-          boxShadow: '4px 0 12px rgba(102, 126, 234, 0.3)',\r\n-          transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',\r\n+          boxShadow: '4px 0 16px rgba(102, 126, 234, 0.35)',\r\n+          transition: 'all 0.35s cubic-bezier(0.4, 0, 0.2, 1)',\r\n           zIndex: 999,\r\n           display: 'flex',\r\n           alignItems: 'center',\r\n           justifyContent: 'center',\r\n-          width: '32px',\r\n-          height: '70px',\r\n+          width: '36px',\r\n+          height: '80px',\r\n           backdropFilter: 'blur(10px)',\r\n           WebkitBackdropFilter: 'blur(10px)',\r\n           overflow: 'hidden'\r\n         }}\r\n         onMouseOver={(e) => {\r\n           e.currentTarget.style.background = 'linear-gradient(135deg, #764ba2 0%, #667eea 100%)';\r\n-          e.currentTarget.style.boxShadow = '6px 0 16px rgba(118, 75, 162, 0.45)';\r\n-          e.currentTarget.style.width = '36px';\r\n+          e.currentTarget.style.boxShadow = '6px 0 20px rgba(118, 75, 162, 0.5)';\r\n+          e.currentTarget.style.width = '40px';\r\n         }}\r\n         onMouseOut={(e) => {\r\n           e.currentTarget.style.background = 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)';\r\n-          e.currentTarget.style.boxShadow = '4px 0 12px rgba(102, 126, 234, 0.3)';\r\n-          e.currentTarget.style.width = '32px';\r\n+          e.currentTarget.style.boxShadow = '4px 0 16px rgba(102, 126, 234, 0.35)';\r\n+          e.currentTarget.style.width = '36px';\r\n         }}\r\n         title={isOpen ? 'Hide Controls' : 'Show Controls'}\r\n       >\r\n         <div style={{\r\n           display: 'flex',\r\n           flexDirection: 'column',\r\n           alignItems: 'center',\r\n           justifyContent: 'center',\r\n-          gap: '1.5px'\r\n+          gap: '2px'\r\n         }}>\r\n           {/* Animated chevron lines */}\r\n           <div style={{\r\n-            width: '12px',\r\n+            width: '14px',\r\n             height: '2px',\r\n             background: 'white',\r\n-            borderRadius: '1px',\r\n-            transform: isOpen ? 'rotate(-45deg) translateY(4.5px)' : 'rotate(45deg) translateY(4.5px)',\r\n+            borderRadius: '1.5px',\r\n+            transform: isOpen ? 'rotate(-45deg) translateY(5px)' : 'rotate(45deg) translateY(5px)',\r\n             transition: 'all 0.3s ease'\r\n           }}></div>\r\n           <div style={{\r\n-            width: '12px',\r\n+            width: '14px',\r\n             height: '2px',\r\n             background: 'white',\r\n-            borderRadius: '1px',\r\n-            transform: isOpen ? 'rotate(45deg) translateY(-4.5px)' : 'rotate(-45deg) translateY(-4.5px)',\r\n+            borderRadius: '1.5px',\r\n+            transform: isOpen ? 'rotate(45deg) translateY(-5px)' : 'rotate(-45deg) translateY(-5px)',\r\n             transition: 'all 0.3s ease'\r\n           }}></div>\r\n         </div>\r\n       </button>\r\n"
                },
                {
                    "date": 1761127060388,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -90,33 +90,24 @@\n           e.currentTarget.style.width = '36px';\r\n         }}\r\n         title={isOpen ? 'Hide Controls' : 'Show Controls'}\r\n       >\r\n-        <div style={{\r\n-          display: 'flex',\r\n-          flexDirection: 'column',\r\n-          alignItems: 'center',\r\n-          justifyContent: 'center',\r\n-          gap: '2px'\r\n-        }}>\r\n-          {/* Animated chevron lines */}\r\n-          <div style={{\r\n-            width: '14px',\r\n-            height: '2px',\r\n-            background: 'white',\r\n-            borderRadius: '1.5px',\r\n-            transform: isOpen ? 'rotate(-45deg) translateY(5px)' : 'rotate(45deg) translateY(5px)',\r\n-            transition: 'all 0.3s ease'\r\n-          }}></div>\r\n-          <div style={{\r\n-            width: '14px',\r\n-            height: '2px',\r\n-            background: 'white',\r\n-            borderRadius: '1.5px',\r\n-            transform: isOpen ? 'rotate(45deg) translateY(-5px)' : 'rotate(-45deg) translateY(-5px)',\r\n-            transition: 'all 0.3s ease'\r\n-          }}></div>\r\n-        </div>\r\n+        <svg \r\n+          width=\"20\" \r\n+          height=\"20\" \r\n+          viewBox=\"0 0 24 24\" \r\n+          fill=\"none\" \r\n+          stroke=\"white\" \r\n+          strokeWidth=\"2.5\" \r\n+          strokeLinecap=\"round\" \r\n+          strokeLinejoin=\"round\"\r\n+          style={{\r\n+            transform: isOpen ? 'rotate(180deg)' : 'rotate(0deg)',\r\n+            transition: 'transform 0.3s ease'\r\n+          }}\r\n+        >\r\n+          <polyline points=\"9 18 15 12 9 6\"></polyline>\r\n+        </svg>\r\n       </button>\r\n \r\n       {/* Main Sidebar Panel */}\r\n       <div \r\n"
                },
                {
                    "date": 1761129760177,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,8 +15,9 @@\n   onCancelDrawing: () => void;\r\n   isSavingZone?: boolean;\r\n   currentMapType?: 'road' | 'satellite' | 'hybrid' | 'terrain';\r\n   onMapTypeChange?: (type: 'road' | 'satellite' | 'hybrid' | 'terrain') => void;\r\n+  isViewOnly?: boolean; // New prop for admin view-only mode\r\n }\r\n \r\n // Updated component - removed map info card to avoid duplication with MapPageWithSidebar overlay\r\n const ZoneControls: React.FC<ZoneControlsProps> = ({\r\n"
                },
                {
                    "date": 1761129772301,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,14 +28,20 @@\n   isDrawing,\r\n   onCancelDrawing,\r\n   isSavingZone,\r\n   currentMapType = 'road',\r\n-  onMapTypeChange\r\n+  onMapTypeChange,\r\n+  isViewOnly = false // Default to false\r\n }) => {\r\n   const [zoneName, setZoneName] = useState('');\r\n   const [zoneColor, setZoneColor] = useState('#3388ff');\r\n   const [isOpen, setIsOpen] = useState(true);\r\n \r\n+  // If in view-only mode (admin), don't render the controls\r\n+  if (isViewOnly) {\r\n+    return null;\r\n+  }\r\n+\r\n   const handleSubmit = (e: React.FormEvent) => {\r\n     e.preventDefault();\r\n     if (zoneName.trim()) {\r\n       onCreateZone(zoneName, zoneColor);\r\n"
                }
            ],
            "date": 1761125908641,
            "name": "Commit-0",
            "content": "import React, { useState } from 'react';\r\n\r\ninterface Zone {\r\n  id: string;\r\n  name: string;\r\n  color: string;\r\n}\r\n\r\ninterface ZoneControlsProps {\r\n  onCreateZone: (name: string, color: string) => void;\r\n  onDeleteZone: (id: string) => void;\r\n  onSaveAllZones?: () => void;\r\n  zones: Zone[];\r\n  isDrawing: boolean;\r\n  onCancelDrawing: () => void;\r\n  isSavingZone?: boolean;\r\n  currentMapType?: 'road' | 'satellite' | 'hybrid' | 'terrain';\r\n  onMapTypeChange?: (type: 'road' | 'satellite' | 'hybrid' | 'terrain') => void;\r\n}\r\n\r\n// Updated component - removed map info card to avoid duplication with MapPageWithSidebar overlay\r\nconst ZoneControls: React.FC<ZoneControlsProps> = ({\r\n  onCreateZone,\r\n  onDeleteZone,\r\n  onSaveAllZones,\r\n  zones,\r\n  isDrawing,\r\n  onCancelDrawing,\r\n  isSavingZone,\r\n  currentMapType = 'road',\r\n  onMapTypeChange\r\n}) => {\r\n  const [zoneName, setZoneName] = useState('');\r\n  const [zoneColor, setZoneColor] = useState('#3388ff');\r\n  const [isOpen, setIsOpen] = useState(true);\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (zoneName.trim()) {\r\n      onCreateZone(zoneName, zoneColor);\r\n    } else {\r\n      alert(\"Please enter a zone name\");\r\n    }\r\n  };\r\n\r\n  // Map types configuration\r\n  const mapTypes = [\r\n    { id: 'road', label: 'Road', icon: '🛣️' },\r\n    { id: 'satellite', label: 'Satellite', icon: '🛰️' },\r\n    { id: 'hybrid', label: 'Hybrid', icon: '🌍' },\r\n    { id: 'terrain', label: 'Terrain', icon: '🏔️' }\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      {/* Toggle Button - Modern Design */}\r\n      <button\r\n        onClick={() => setIsOpen(!isOpen)}\r\n        style={{\r\n          position: 'absolute',\r\n          top: '80px',\r\n          left: isOpen ? '360px' : '0px',\r\n          padding: '0',\r\n          background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\r\n          color: 'white',\r\n          border: 'none',\r\n          borderRadius: '0 12px 12px 0',\r\n          cursor: 'pointer',\r\n          boxShadow: '4px 0 20px rgba(102, 126, 234, 0.35)',\r\n          transition: 'all 0.35s cubic-bezier(0.4, 0, 0.2, 1)',\r\n          zIndex: 999,\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n          width: '40px',\r\n          height: '100px',\r\n          backdropFilter: 'blur(10px)',\r\n          WebkitBackdropFilter: 'blur(10px)',\r\n          overflow: 'hidden'\r\n        }}\r\n        onMouseOver={(e) => {\r\n          e.currentTarget.style.background = 'linear-gradient(135deg, #764ba2 0%, #667eea 100%)';\r\n          e.currentTarget.style.boxShadow = '6px 0 25px rgba(118, 75, 162, 0.5)';\r\n          e.currentTarget.style.width = '46px';\r\n        }}\r\n        onMouseOut={(e) => {\r\n          e.currentTarget.style.background = 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)';\r\n          e.currentTarget.style.boxShadow = '4px 0 20px rgba(102, 126, 234, 0.35)';\r\n          e.currentTarget.style.width = '40px';\r\n        }}\r\n        title={isOpen ? 'Hide Controls' : 'Show Controls'}\r\n      >\r\n        <div style={{\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n          gap: '4px'\r\n        }}>\r\n          {/* Animated chevron lines */}\r\n          <div style={{\r\n            width: '20px',\r\n            height: '3px',\r\n            background: 'white',\r\n            borderRadius: '2px',\r\n            transform: isOpen ? 'rotate(-45deg) translateY(7px)' : 'rotate(45deg) translateY(7px)',\r\n            transition: 'all 0.3s ease'\r\n          }}></div>\r\n          <div style={{\r\n            width: '20px',\r\n            height: '3px',\r\n            background: 'white',\r\n            borderRadius: '2px',\r\n            transform: isOpen ? 'rotate(45deg) translateY(-7px)' : 'rotate(-45deg) translateY(-7px)',\r\n            transition: 'all 0.3s ease'\r\n          }}></div>\r\n        </div>\r\n      </button>\r\n\r\n      {/* Main Sidebar Panel */}\r\n      <div \r\n        className=\"zone-controls\"\r\n        style={{\r\n          transform: isOpen ? 'translateX(0)' : 'translateX(-100%)',\r\n          transition: 'transform 0.3s ease'\r\n        }}\r\n      >\r\n        {/* Map Type Selector */}\r\n        {onMapTypeChange && (\r\n        <div className=\"controls-section\" style={{ paddingBottom: '12px', borderBottom: '1px solid #e8eaed' }}>\r\n          <div className=\"section-header\">\r\n            <span className=\"section-icon\">🗺️</span>\r\n            <h3>Map Type</h3>\r\n          </div>\r\n          <div style={{ \r\n            display: 'grid', \r\n            gridTemplateColumns: 'repeat(2, 1fr)', \r\n            gap: '8px',\r\n            marginTop: '12px'\r\n          }}>\r\n            {mapTypes.map((type) => (\r\n              <button\r\n                key={type.id}\r\n                onClick={() => onMapTypeChange(type.id as 'road' | 'satellite' | 'hybrid' | 'terrain')}\r\n                style={{\r\n                  padding: '10px',\r\n                  background: currentMapType === type.id ? '#4f8cff' : '#f8f9fa',\r\n                  color: currentMapType === type.id ? 'white' : '#333',\r\n                  border: currentMapType === type.id ? '2px solid #4f8cff' : '2px solid #e0e0e0',\r\n                  borderRadius: '8px',\r\n                  cursor: 'pointer',\r\n                  fontSize: '12px',\r\n                  fontWeight: currentMapType === type.id ? '600' : '500',\r\n                  transition: 'all 0.2s ease',\r\n                  display: 'flex',\r\n                  flexDirection: 'column',\r\n                  alignItems: 'center',\r\n                  gap: '4px'\r\n                }}\r\n                onMouseOver={(e) => {\r\n                  if (currentMapType !== type.id) {\r\n                    e.currentTarget.style.background = '#e8f0fe';\r\n                    e.currentTarget.style.borderColor = '#4f8cff';\r\n                  }\r\n                }}\r\n                onMouseOut={(e) => {\r\n                  if (currentMapType !== type.id) {\r\n                    e.currentTarget.style.background = '#f8f9fa';\r\n                    e.currentTarget.style.borderColor = '#e0e0e0';\r\n                  }\r\n                }}\r\n              >\r\n                <span style={{ fontSize: '20px' }}>{type.icon}</span>\r\n                <span>{type.label}</span>\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      <div className=\"controls-section\">\r\n        <div className=\"section-header\">\r\n          <span className=\"section-icon\">🎨</span>\r\n          <h3>Zone Controls</h3>\r\n        </div>\r\n      \r\n        {!isDrawing ? (\r\n          <form className=\"zone-form\" onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Zone name\"\r\n            value={zoneName}\r\n            onChange={(e) => setZoneName(e.target.value)}\r\n          />\r\n          <div className=\"color-picker\">\r\n            <label>Zone color:</label>\r\n            <input\r\n              type=\"color\"\r\n              value={zoneColor}\r\n              onChange={(e) => setZoneColor(e.target.value)}\r\n            />\r\n          </div>\r\n          <button type=\"submit\">Draw Zone</button>\r\n          \r\n          <div className=\"draw-instructions\">\r\n            Click the \"Draw Zone\" button, then draw a polygon on the map.\r\n            Click points to create a shape, double-click to complete it.\r\n          </div>\r\n        </form>\r\n      ) : (\r\n        <div className=\"zone-form\">\r\n          <div className=\"draw-instructions\">\r\n            <strong>✏️ Drawing: {zoneName || 'Unnamed Zone'}</strong>\r\n            <br />\r\n            Click on the map to add points. Double-click to finish.\r\n          </div>\r\n          <button onClick={onCancelDrawing} className=\"cancel\">❌ Cancel Drawing</button>\r\n        </div>\r\n      )}\r\n      </div>\r\n      \r\n      <div className=\"zones-list\">\r\n        <div className=\"zones-list-header\">\r\n          <h3>Zones</h3>\r\n          <span className=\"zone-count\">{zones.length} zone{zones.length !== 1 ? 's' : ''}</span>\r\n        </div>\r\n        \r\n        {isSavingZone && (\r\n          <div className=\"draw-instructions\" style={{ marginBottom: '16px', marginTop: '16px' }}>\r\n            💾 Saving zone to database...\r\n          </div>\r\n        )}\r\n        \r\n        {zones.length === 0 ? (\r\n          <div className=\"empty-state\">\r\n            <p>\r\n              📍 No zones created yet.<br />\r\n              Click \"Draw Zone\" above to create your first zone on the map.\r\n            </p>\r\n          </div>\r\n        ) : (\r\n          <>            \r\n            {zones.map((zone) => (\r\n              <div key={zone.id} className=\"zone-item\">\r\n                <div className=\"zone-name-color\">\r\n                  <div \r\n                    className=\"zone-color\" \r\n                    style={{ backgroundColor: zone.color }}\r\n                    title={`Zone Color: ${zone.color}`}\r\n                  ></div>\r\n                  <span title={zone.name}>{zone.name}</span>\r\n                </div>\r\n                <div className=\"zone-actions\">\r\n                  <button \r\n                    onClick={() => onDeleteZone(zone.id)}\r\n                    title=\"Delete this zone\"\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            ))}\r\n            \r\n            {/* Save all zones button - if needed */}\r\n            {onSaveAllZones && (\r\n              <div className=\"save-zones-container\">\r\n                <button\r\n                  onClick={onSaveAllZones}\r\n                  className=\"save-all-zones-button\"\r\n                  disabled={isSavingZone}\r\n                >\r\n                  {isSavingZone ? '💾 Saving...' : '💾 Save All Zones'}\r\n                </button>\r\n              </div>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n      {/* End of main sidebar panel */}\r\n    </div>\r\n    {/* End of outer wrapper */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ZoneControls;"
        }
    ]
}