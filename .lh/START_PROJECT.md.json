{
    "sourceFile": "START_PROJECT.md",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1760441655268,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1760441655268,
            "name": "Commit-0",
            "content": "# 🚀 MapIt Project Startup Guide\r\n\r\n## ⚡ Quick Start (Tell the AI)\r\n\r\nJust say one of these phrases:\r\n- **\"Start my servers\"**\r\n- **\"Run the backend and frontend\"**\r\n- **\"Start the MapIt project\"**\r\n- **\"Launch my app\"**\r\n\r\n---\r\n\r\n## 📋 What Happens Behind the Scenes\r\n\r\n### Step 1: Start PostgreSQL Database\r\nYour PostgreSQL database should already be running as a Windows service.\r\n- **Port:** 5432\r\n- **Database:** mapit\r\n- **User:** postgres\r\n- **Password:** NewStrongPass123\r\n\r\n### Step 2: Start Backend Server (Port 3101)\r\n```bash\r\nnode simple-login-server.js\r\n```\r\nThis runs in Terminal 1 (keep it open!)\r\n\r\n### Step 3: Start Frontend Server (Port 5173)\r\n```bash\r\nnpm run dev\r\n```\r\nThis runs in Terminal 2 (keep it open!)\r\n\r\n---\r\n\r\n## 🎯 Simple Phrases for the AI\r\n\r\n### Starting\r\n- \"Start my servers\"\r\n- \"Run the project\"\r\n- \"Launch MapIt\"\r\n\r\n### Checking Status\r\n- \"Are my servers running?\"\r\n- \"Check if backend is up\"\r\n- \"Is the database connected?\"\r\n\r\n### Troubleshooting\r\n- \"Port 3101 is busy\" → AI will kill old processes\r\n- \"Can't connect to database\" → AI will verify PostgreSQL\r\n- \"Frontend not loading\" → AI will restart Vite\r\n\r\n---\r\n\r\n## 🔍 How to Verify Everything Works\r\n\r\n### 1. Backend Check\r\nOpen browser: http://localhost:3101/api/health\r\nShould return: `{\"status\":\"ok\"}`\r\n\r\n### 2. Frontend Check\r\nOpen browser: http://localhost:5173\r\nShould show: Login page\r\n\r\n### 3. Full Test\r\n1. Login with: `eidimontaha20@gmail.com` / your password\r\n2. See dashboard with your 6 maps\r\n3. Click \"Create New Map\"\r\n4. Fill form and create map\r\n5. Draw zones and save\r\n\r\n---\r\n\r\n## 🛠️ Manual Commands (If AI Not Available)\r\n\r\n### Windows PowerShell:\r\n\r\n**Terminal 1 - Backend:**\r\n```powershell\r\ncd C:\\Users\\user\\mapit\r\nnode simple-login-server.js\r\n```\r\n\r\n**Terminal 2 - Frontend:**\r\n```powershell\r\ncd C:\\Users\\user\\mapit\r\nnpm run dev\r\n```\r\n\r\n### If Ports Are Busy:\r\n```powershell\r\n# Kill all node processes\r\nGet-Process node -ErrorAction SilentlyContinue | Stop-Process -Force\r\n\r\n# Wait 2 seconds\r\nStart-Sleep -Seconds 2\r\n\r\n# Restart servers\r\n```\r\n\r\n---\r\n\r\n## 📁 Key Files\r\n\r\n| File | Purpose | Port |\r\n|------|---------|------|\r\n| `simple-login-server.js` | Backend API | 3101 |\r\n| `src/App.tsx` | Frontend entry | 5173 |\r\n| PostgreSQL | Database | 5432 |\r\n\r\n---\r\n\r\n## 🐛 Common Issues & Solutions\r\n\r\n### Issue 1: \"Port 3101 already in use\"\r\n**Say:** \"Port 3101 is busy, restart backend\"\r\n**Manual Fix:**\r\n```powershell\r\nnetstat -ano | findstr \"3101\"\r\n# Find PID, then:\r\ntaskkill /PID <number> /F\r\n```\r\n\r\n### Issue 2: \"Cannot connect to database\"\r\n**Say:** \"Check database connection\"\r\n**Manual Fix:** \r\n- Open Services (Win+R → `services.msc`)\r\n- Find \"postgresql-x64-15\" \r\n- Click \"Start\" if stopped\r\n\r\n### Issue 3: \"Invalid user data\" when creating map\r\n**Say:** \"I need to log out and log back in\"\r\n**Reason:** Old session data, needs refresh\r\n\r\n### Issue 4: Zones not saving\r\n**Say:** \"Zones aren't saving\"\r\n**Check:** Backend terminal for error messages\r\n\r\n---\r\n\r\n## 🎓 Database Info\r\n\r\n**Connection String:**\r\n```\r\npostgresql://postgres:NewStrongPass123@localhost:5432/mapit\r\n```\r\n\r\n**Tables:**\r\n- `customer` - User accounts\r\n- `map` - Your maps with map_codes\r\n- `zones` - Polygons drawn on maps\r\n- `customer_map` - Links customers to maps\r\n\r\n---\r\n\r\n## 🔐 Test Account\r\n\r\n**Email:** eidimontaha20@gmail.com  \r\n**Password:** (your password)  \r\n**Customer ID:** 18  \r\n**Current Maps:** 6 maps, 14 zones total\r\n\r\n---\r\n\r\n## ✅ Success Checklist\r\n\r\n- [ ] PostgreSQL running (port 5432)\r\n- [ ] Backend running (port 3101)\r\n- [ ] Frontend running (port 5173)\r\n- [ ] Can access http://localhost:5173\r\n- [ ] Can login successfully\r\n- [ ] Dashboard shows your maps\r\n- [ ] Can create new maps\r\n- [ ] Can draw and save zones\r\n- [ ] Map codes display correctly\r\n\r\n---\r\n\r\n## 💡 Pro Tips\r\n\r\n1. **Keep both terminals open** while using the app\r\n2. **Backend logs** show all API requests - useful for debugging\r\n3. **Hard refresh** browser (Ctrl+F5) after code changes\r\n4. **Check browser console** (F12) for frontend errors\r\n5. **PostgreSQL password** is stored in simple-login-server.js line 14\r\n\r\n---\r\n\r\n## 🆘 Emergency Reset\r\n\r\nIf everything is broken:\r\n\r\n```powershell\r\n# 1. Kill all node processes\r\nGet-Process node -ErrorAction SilentlyContinue | Stop-Process -Force\r\n\r\n# 2. Wait\r\nStart-Sleep -Seconds 3\r\n\r\n# 3. Start backend\r\nStart-Process powershell -ArgumentList \"-NoExit\", \"-Command\", \"cd C:\\Users\\user\\mapit; node simple-login-server.js\"\r\n\r\n# 4. Wait\r\nStart-Sleep -Seconds 2\r\n\r\n# 5. Start frontend\r\nStart-Process powershell -ArgumentList \"-NoExit\", \"-Command\", \"cd C:\\Users\\user\\mapit; npm run dev\"\r\n```\r\n\r\nOr just tell the AI: **\"Emergency restart everything\"**\r\n\r\n---\r\n\r\n## 📞 What to Say Tomorrow\r\n\r\n### Option 1 (Simplest):\r\n> \"Start my servers\"\r\n\r\n### Option 2 (Detailed):\r\n> \"Start the backend on port 3101 and frontend on port 5173\"\r\n\r\n### Option 3 (If issues):\r\n> \"Something is wrong, help me start the project. Check if ports are busy first.\"\r\n\r\n---\r\n\r\n## 🎯 Current Project Status\r\n\r\n- ✅ Backend API: 14 endpoints working\r\n- ✅ Frontend: React + TypeScript + Vite\r\n- ✅ Database: PostgreSQL with 4 tables\r\n- ✅ Authentication: Working with bcrypt\r\n- ✅ Maps: 6 maps created\r\n- ✅ Zones: 14 zones saved\r\n- ✅ Map Codes: Auto-generating (MAP-XXXX-XXXX)\r\n- ✅ Modern UI: Purple gradients, white background\r\n\r\n---\r\n\r\n**Last Updated:** October 14, 2025  \r\n**Version:** 1.0  \r\n**Your Email:** eidimontaha20@gmail.com\r\n\r\n---\r\n\r\n## 🌟 You're All Set!\r\n\r\nJust say **\"Start my servers\"** and you're good to go! 🚀\r\n"
        }
    ]
}