{
    "sourceFile": "QUICK_START.md",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1760438136150,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1760438136150,
            "name": "Commit-0",
            "content": "# 🚀 QUICK START - Map & Zone System\r\n\r\n## 🟢 Servers Running\r\n\r\n### Backend API (Port 3101)\r\n```\r\nStatus: ✅ RUNNING\r\nURL: http://127.0.0.1:3101\r\nFile: simple-login-server.js\r\n```\r\n\r\n### Frontend Vite (Port 5173)\r\n```\r\nStatus: ✅ RUNNING  \r\nURL: http://localhost:5173\r\n```\r\n\r\n---\r\n\r\n## 📋 Available API Endpoints\r\n\r\n### **Authentication**\r\n- `POST /api/register` - Register new user\r\n- `POST /api/login` - Login user\r\n- `GET /api/health` - Check server health\r\n\r\n### **Maps**\r\n- `POST /api/map` - Create new map (returns map with code)\r\n- `GET /api/map/:map_id` - Get specific map\r\n- `PUT /api/map/:map_id` - Update map\r\n- `GET /api/customer/:customer_id/maps` - Get all maps for customer (with zone counts)\r\n\r\n### **Zones**\r\n- `POST /api/zone` - Create zone for a map\r\n- `GET /api/map/:map_id/zones` - Get all zones for a map\r\n- `PUT /api/zone/:zone_id` - Update zone\r\n- `DELETE /api/zone/:zone_id` - Delete zone\r\n\r\n---\r\n\r\n## 🎯 How to Use\r\n\r\n### **1. Create a New Map**\r\n\r\n```javascript\r\n// Frontend automatically generates map code\r\nconst mapCode = `MAP-${Date.now()}-${randomString}`;\r\n\r\n// POST /api/map\r\n{\r\n  \"title\": \"My New Map\",\r\n  \"description\": \"Description here\",\r\n  \"map_code\": mapCode,  // Auto-generated\r\n  \"customer_id\": 18,\r\n  \"country\": \"Lebanon\",\r\n  \"active\": true\r\n}\r\n\r\n// Response includes map_id and map_code\r\n{\r\n  \"success\": true,\r\n  \"map\": {\r\n    \"map_id\": 13,\r\n    \"map_code\": \"MAP-1697280000-ABC123\",\r\n    ...\r\n  }\r\n}\r\n```\r\n\r\n### **2. Create Zones for the Map**\r\n\r\n```javascript\r\n// After map is created, save each zone\r\n// POST /api/zone\r\n{\r\n  \"map_id\": 13,  // From step 1\r\n  \"name\": \"Zone 1\",\r\n  \"color\": \"#ff0000\",\r\n  \"coordinates\": [[lat, lng], [lat, lng], ...],\r\n  \"customer_id\": 18\r\n}\r\n\r\n// Response\r\n{\r\n  \"success\": true,\r\n  \"zone\": {\r\n    \"id\": \"uuid-generated\",\r\n    \"map_id\": 13,\r\n    \"name\": \"Zone 1\",\r\n    ...\r\n  }\r\n}\r\n```\r\n\r\n### **3. View in Dashboard**\r\n\r\n```javascript\r\n// GET /api/customer/18/maps\r\n// Returns all maps with zone counts\r\n\r\n{\r\n  \"success\": true,\r\n  \"maps\": [\r\n    {\r\n      \"map_id\": 13,\r\n      \"title\": \"My New Map\",\r\n      \"map_code\": \"MAP-1697280000-ABC123\",\r\n      \"zone_count\": \"5\",  // Number of zones\r\n      \"created_at\": \"...\"\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\n---\r\n\r\n## 📊 Database Relationships\r\n\r\n```\r\ncustomer (you@gmail.com)\r\n    │\r\n    ├─→ map #13 (code: MAP-...ABC123)\r\n    │   ├─→ zone #1 (name: \"Beirut\")\r\n    │   ├─→ zone #2 (name: \"Tripoli\")\r\n    │   └─→ zone #3 (name: \"Sidon\")\r\n    │\r\n    └─→ map #14 (code: MAP-...XYZ789)\r\n        ├─→ zone #1 (name: \"Damascus\")\r\n        └─→ zone #2 (name: \"Aleppo\")\r\n```\r\n\r\n---\r\n\r\n## 🔍 Key Features\r\n\r\n✅ **Unique Map Codes**: Each map gets a unique code like `MAP-1697280000-ABC123`\r\n✅ **Zone Tracking**: See how many zones each map has\r\n✅ **Customer Ownership**: Each customer sees only their maps\r\n✅ **Zone Management**: Create, update, delete zones\r\n✅ **Real-time Updates**: Dashboard shows current zone counts\r\n\r\n---\r\n\r\n## 🎨 What You See in Browser\r\n\r\n### Dashboard View:\r\n```\r\n╔════════════════════════════════════════════════════════╗\r\n║ My Maps Dashboard                                      ║\r\n║ 👤 Logged in as: eidimontaha20@gmail.com             ║\r\n╠════════════════════════════════════════════════════════╣\r\n║ 📊 Total Maps: 2  |  🏷️ Total Zones: 10  |  📈 Avg: 5.0 ║\r\n╠════════════════════════════════════════════════════════╣\r\n║ ID  │ Title  │ Map Code       │ Zones │ Date      │   ║\r\n║ #13 │ Map A  │ MAP-...ABC123  │   5   │ 10/14/25  │   ║\r\n║ #12 │ fff    │ MAP-...XYZ789  │   2   │ 10/13/25  │   ║\r\n║ #10 │ map1   │ MAP-...DEF456  │   8   │ 10/13/25  │   ║\r\n╚════════════════════════════════════════════════════════╝\r\n```\r\n\r\n### Map Editor:\r\n- Shows map code at top\r\n- Interactive map for drawing zones\r\n- Save button to save all zones\r\n- Each zone saved individually to database\r\n\r\n---\r\n\r\n## 🎯 Your Current Maps\r\n\r\nBased on database query:\r\n\r\n**Customer: eidimontaha20@gmail.com (ID: 18)**\r\n\r\n- ✅ Map 10: \"map1\" → 8 zones\r\n- ✅ Map 12: \"fff\" → 2 zones\r\n- **Total: 2 maps, 10 zones**\r\n\r\n---\r\n\r\n## ⚡ Next Steps\r\n\r\n1. **Refresh browser** at http://localhost:5173\r\n2. **Login** if not already logged in\r\n3. **View dashboard** - See your 2 existing maps with zone counts\r\n4. **Create new map** - Click \"Create New Map\"\r\n5. **Add zones** - Draw zones on the map\r\n6. **Save** - Map code will be generated and displayed\r\n7. **View in dashboard** - See new map with zone count\r\n\r\n---\r\n\r\n## 🐛 If Something Doesn't Work\r\n\r\n1. **Check both servers are running:**\r\n   ```powershell\r\n   # Backend\r\n   Get-Process node | Select-Object Id, ProcessName\r\n   \r\n   # Should see node processes\r\n   ```\r\n\r\n2. **Check browser console** (F12) for errors\r\n\r\n3. **Check server logs** in terminal for API errors\r\n\r\n4. **Verify database:**\r\n   ```powershell\r\n   node check-customer-maps.cjs\r\n   ```\r\n\r\n---\r\n\r\n## 📞 Summary\r\n\r\n**What's Working:**\r\n- ✅ Backend API with all map/zone endpoints\r\n- ✅ Frontend dashboard with zone counts  \r\n- ✅ Map code generation\r\n- ✅ Zone creation and management\r\n- ✅ Customer-map relationships\r\n- ✅ Database queries working\r\n\r\n**What to Test:**\r\n1. Login to dashboard\r\n2. View existing maps (should see 2 maps)\r\n3. Create new map → should generate code\r\n4. Add zones → save to database\r\n5. Return to dashboard → see updated counts\r\n\r\n**Everything is ready! 🎉**\r\n"
        }
    ]
}