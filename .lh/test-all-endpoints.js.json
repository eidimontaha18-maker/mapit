{
    "sourceFile": "test-all-endpoints.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1760433584606,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1760433584606,
            "name": "Commit-0",
            "content": "/**\r\n * Complete API test to verify all endpoints\r\n */\r\n\r\nconsole.log('Testing MapIt API endpoints...\\n');\r\nconsole.log('Make sure the server is running on port 3101\\n');\r\n\r\n// Test using dynamic import to avoid issues\r\nconst tests = [\r\n  {\r\n    name: 'Health Check',\r\n    url: 'http://127.0.0.1:3101/api/health',\r\n    method: 'GET'\r\n  },\r\n  {\r\n    name: 'Test Endpoint',\r\n    url: 'http://127.0.0.1:3101/api/test',\r\n    method: 'GET'\r\n  },\r\n  {\r\n    name: 'List Tables',\r\n    url: 'http://127.0.0.1:3101/api/db/tables',\r\n    method: 'GET'\r\n  },\r\n  {\r\n    name: 'Get Maps (no filter)',\r\n    url: 'http://127.0.0.1:3101/api/db/tables/map',\r\n    method: 'GET'\r\n  },\r\n  {\r\n    name: 'Get Maps (with customer filter)',\r\n    url: 'http://127.0.0.1:3101/api/db/tables/map?customer_id=1',\r\n    method: 'GET'\r\n  }\r\n];\r\n\r\n// Use dynamic import for node-fetch\r\nimport('node-fetch').then(({ default: fetch }) => {\r\n  runTests(fetch);\r\n}).catch(err => {\r\n  console.error('Error importing fetch:', err.message);\r\n  console.log('\\nTrying with native http module instead...\\n');\r\n  runTestsWithHttp();\r\n});\r\n\r\nasync function runTests(fetch) {\r\n  for (const test of tests) {\r\n    try {\r\n      console.log(`\\nüìù Testing: ${test.name}`);\r\n      console.log(`   URL: ${test.url}`);\r\n      \r\n      const response = await fetch(test.url, { method: test.method });\r\n      console.log(`   Status: ${response.status} ${response.statusText}`);\r\n      \r\n      const text = await response.text();\r\n      console.log(`   Response: ${text.substring(0, 200)}${text.length > 200 ? '...' : ''}`);\r\n      \r\n      if (response.ok) {\r\n        console.log(`   ‚úÖ SUCCESS`);\r\n      } else {\r\n        console.log(`   ‚ùå FAILED`);\r\n      }\r\n    } catch (err) {\r\n      console.log(`   ‚ùå ERROR: ${err.message}`);\r\n    }\r\n  }\r\n  \r\n  console.log('\\n\\n‚úÖ All tests completed!\\n');\r\n}\r\n\r\nfunction runTestsWithHttp() {\r\n  import('http').then(({ default: http }) => {\r\n    runTestsWithHttpModule(http);\r\n  });\r\n}\r\n\r\nasync function runTestsWithHttpModule(http) {\r\n  for (const test of tests) {\r\n    await new Promise((resolve) => {\r\n      console.log(`\\nüìù Testing: ${test.name}`);\r\n      console.log(`   URL: ${test.url}`);\r\n      \r\n      const url = new URL(test.url);\r\n      const options = {\r\n        hostname: url.hostname,\r\n        port: url.port,\r\n        path: url.pathname + url.search,\r\n        method: test.method\r\n      };\r\n      \r\n      const req = http.request(options, (res) => {\r\n        let data = '';\r\n        res.on('data', (chunk) => { data += chunk; });\r\n        res.on('end', () => {\r\n          console.log(`   Status: ${res.statusCode}`);\r\n          console.log(`   Response: ${data.substring(0, 200)}${data.length > 200 ? '...' : ''}`);\r\n          if (res.statusCode >= 200 && res.statusCode < 300) {\r\n            console.log(`   ‚úÖ SUCCESS`);\r\n          } else {\r\n            console.log(`   ‚ùå FAILED`);\r\n          }\r\n          resolve();\r\n        });\r\n      });\r\n      \r\n      req.on('error', (err) => {\r\n        console.log(`   ‚ùå ERROR: ${err.message}`);\r\n        resolve();\r\n      });\r\n      \r\n      req.end();\r\n    });\r\n  }\r\n  \r\n  console.log('\\n\\n‚úÖ All tests completed!\\n');\r\n}\r\n"
        }
    ]
}