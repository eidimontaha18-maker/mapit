{
    "sourceFile": "test-login-direct.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1760431874229,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1760431874229,
            "name": "Commit-0",
            "content": "// Simple login page test using PostgREST directly\r\nimport fetch from 'node-fetch';\r\nimport { writeFileSync } from 'fs';\r\n\r\nconst POSTGREST_URL = 'http://127.0.0.1:3100';\r\n\r\nasync function testLoginWithPostgREST() {\r\n    console.log('üîê Testing login using PostgREST directly...\\n');\r\n    \r\n    const testCredentials = {\r\n        email: 'eidimontaha188@gmail.com',  // From your login screenshot\r\n        password: 'your-password-here'     // You'll need to know the actual password\r\n    };\r\n    \r\n    try {\r\n        // 1. First, let's see what customers exist\r\n        console.log('1. Fetching customer data from PostgREST...');\r\n        const customerResponse = await fetch(`${POSTGREST_URL}/customer?select=customer_id,first_name,last_name,email`);\r\n        \r\n        if (customerResponse.ok) {\r\n            const customers = await customerResponse.json();\r\n            console.log('‚úÖ Available customers:');\r\n            customers.forEach(customer => {\r\n                console.log(`   ID: ${customer.customer_id}, Name: ${customer.first_name} ${customer.last_name}, Email: ${customer.email}`);\r\n            });\r\n        } else {\r\n            console.log('‚ùå Could not fetch customers:', customerResponse.status);\r\n            return;\r\n        }\r\n        \r\n        // 2. Test login by checking email and password\r\n        console.log('\\n2. Testing login logic...');\r\n        const loginEmail = 'eidimontaha188@gmail.com'; // Exact email from database\r\n        \r\n        // Query for user with specific email\r\n        const userResponse = await fetch(`${POSTGREST_URL}/customer?email=eq.${encodeURIComponent(loginEmail)}&select=customer_id,first_name,last_name,email,password_hash`);\r\n        \r\n        if (userResponse.ok) {\r\n            const users = await userResponse.json();\r\n            \r\n            if (users.length === 0) {\r\n                console.log('‚ùå No user found with email:', loginEmail);\r\n                console.log('üí° Try using: alice@example.com with password: Password123!');\r\n            } else {\r\n                const user = users[0];\r\n                console.log('‚úÖ User found:', `${user.first_name} ${user.last_name} (${user.email})`);\r\n                console.log('üîê Password hash format:', user.password_hash.substring(0, 20) + '...');\r\n                \r\n                // Provide instructions for frontend\r\n                console.log('\\nüìù For your frontend login:');\r\n                console.log('   Email: alice@example.com');\r\n                console.log('   Password: Password123!');\r\n                console.log('   API Endpoint: http://127.0.0.1:3101/api/login');\r\n            }\r\n        } else {\r\n            console.log('‚ùå Error querying user:', userResponse.status);\r\n        }\r\n        \r\n        // 3. Create a simple HTML login tester\r\n        console.log('\\n3. Creating simple login tester...');\r\n        \r\n        const loginHTML = `\r\n<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Login Test</title>\r\n    <style>\r\n        body { font-family: Arial, sans-serif; max-width: 400px; margin: 50px auto; padding: 20px; }\r\n        .form-group { margin: 15px 0; }\r\n        input { width: 100%; padding: 10px; margin: 5px 0; }\r\n        button { width: 100%; padding: 12px; background: #007bff; color: white; border: none; cursor: pointer; }\r\n        .result { margin: 20px 0; padding: 10px; border-radius: 5px; }\r\n        .success { background: #d4edda; color: #155724; }\r\n        .error { background: #f8d7da; color: #721c24; }\r\n    </style>\r\n</head>\r\n<body>\r\n    <h2>Login Test</h2>\r\n    <form id=\"loginForm\">\r\n        <div class=\"form-group\">\r\n            <input type=\"email\" id=\"email\" placeholder=\"Email\" value=\"alice@example.com\" required>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <input type=\"password\" id=\"password\" placeholder=\"Password\" value=\"Password123!\" required>\r\n        </div>\r\n        <button type=\"submit\">Login</button>\r\n    </form>\r\n    \r\n    <div id=\"result\"></div>\r\n    \r\n    <script>\r\n        document.getElementById('loginForm').addEventListener('submit', async function(e) {\r\n            e.preventDefault();\r\n            \r\n            const email = document.getElementById('email').value;\r\n            const password = document.getElementById('password').value;\r\n            const resultDiv = document.getElementById('result');\r\n            \r\n            try {\r\n                const response = await fetch('http://127.0.0.1:3101/api/login', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify({ email, password })\r\n                });\r\n                \r\n                const result = await response.json();\r\n                \r\n                if (result.success) {\r\n                    resultDiv.innerHTML = '<div class=\"result success\">‚úÖ Login successful!<br>Welcome, ' + result.user.first_name + ' ' + result.user.last_name + '</div>';\r\n                } else {\r\n                    resultDiv.innerHTML = '<div class=\"result error\">‚ùå Login failed: ' + result.error + '</div>';\r\n                }\r\n            } catch (error) {\r\n                resultDiv.innerHTML = '<div class=\"result error\">‚ùå Connection error: ' + error.message + '</div>';\r\n            }\r\n        });\r\n    </script>\r\n</body>\r\n</html>`;\r\n\r\n        // Write the HTML file\r\n        writeFileSync('login-tester.html', loginHTML);\r\n        console.log('‚úÖ Created login-tester.html');\r\n        console.log('üí° Open login-tester.html in your browser to test login');\r\n        \r\n    } catch (error) {\r\n        console.error('‚ùå Error:', error.message);\r\n    }\r\n}\r\n\r\ntestLoginWithPostgREST();"
        }
    ]
}