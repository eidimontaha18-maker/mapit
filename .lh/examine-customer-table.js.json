{
    "sourceFile": "examine-customer-table.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1760431436091,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1760431517081,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,25 +32,25 @@\n         \r\n         // Get sample customer data (without showing passwords)\r\n         console.log('\\nüë• Sample customer data:');\r\n         const sampleQuery = `\r\n-            SELECT customer_id, name, email, created_at\r\n+            SELECT customer_id, first_name, last_name, email, registration_date\r\n             FROM customer \r\n             LIMIT 5;\r\n         `;\r\n         \r\n         const samples = await client.query(sampleQuery);\r\n         samples.rows.forEach(row => {\r\n-            console.log(`   ID: ${row.customer_id}, Name: ${row.name}, Email: ${row.email}`);\r\n+            console.log(`   ID: ${row.customer_id}, Name: ${row.first_name} ${row.last_name}, Email: ${row.email}`);\r\n         });\r\n         \r\n         // Check if passwords are hashed\r\n         console.log('\\nüîê Password format check:');\r\n         const passwordQuery = `\r\n             SELECT customer_id, email, \r\n                    CASE \r\n-                       WHEN LENGTH(password) > 50 THEN 'Likely hashed (length: ' || LENGTH(password) || ')'\r\n-                       ELSE 'Plain text (length: ' || LENGTH(password) || ')'\r\n+                       WHEN LENGTH(password_hash) > 50 THEN 'Likely hashed (length: ' || LENGTH(password_hash) || ')'\r\n+                       ELSE 'Plain text (length: ' || LENGTH(password_hash) || ')'\r\n                    END as password_format\r\n             FROM customer \r\n             LIMIT 3;\r\n         `;\r\n"
                }
            ],
            "date": 1760431436091,
            "name": "Commit-0",
            "content": "import pkg from 'pg';\r\nconst { Client } = pkg;\r\n\r\nconst dbConfig = {\r\n    host: 'localhost',\r\n    port: 5432,\r\n    database: 'mapit',\r\n    user: 'postgres',\r\n    password: 'NewStrongPass123'\r\n};\r\n\r\nasync function examineCustomerTable() {\r\n    const client = new Client(dbConfig);\r\n    \r\n    try {\r\n        await client.connect();\r\n        console.log('‚úÖ Connected to database');\r\n        \r\n        // Get customer table structure\r\n        console.log('\\nüìã Customer table structure:');\r\n        const structureQuery = `\r\n            SELECT column_name, data_type, is_nullable, column_default\r\n            FROM information_schema.columns \r\n            WHERE table_name = 'customer' AND table_schema = 'public'\r\n            ORDER BY ordinal_position;\r\n        `;\r\n        \r\n        const structure = await client.query(structureQuery);\r\n        structure.rows.forEach(row => {\r\n            console.log(`   ${row.column_name}: ${row.data_type} ${row.is_nullable === 'NO' ? '(NOT NULL)' : '(NULLABLE)'}`);\r\n        });\r\n        \r\n        // Get sample customer data (without showing passwords)\r\n        console.log('\\nüë• Sample customer data:');\r\n        const sampleQuery = `\r\n            SELECT customer_id, name, email, created_at\r\n            FROM customer \r\n            LIMIT 5;\r\n        `;\r\n        \r\n        const samples = await client.query(sampleQuery);\r\n        samples.rows.forEach(row => {\r\n            console.log(`   ID: ${row.customer_id}, Name: ${row.name}, Email: ${row.email}`);\r\n        });\r\n        \r\n        // Check if passwords are hashed\r\n        console.log('\\nüîê Password format check:');\r\n        const passwordQuery = `\r\n            SELECT customer_id, email, \r\n                   CASE \r\n                       WHEN LENGTH(password) > 50 THEN 'Likely hashed (length: ' || LENGTH(password) || ')'\r\n                       ELSE 'Plain text (length: ' || LENGTH(password) || ')'\r\n                   END as password_format\r\n            FROM customer \r\n            LIMIT 3;\r\n        `;\r\n        \r\n        const passwordCheck = await client.query(passwordQuery);\r\n        passwordCheck.rows.forEach(row => {\r\n            console.log(`   ${row.email}: ${row.password_format}`);\r\n        });\r\n        \r\n    } catch (error) {\r\n        console.error('‚ùå Error:', error.message);\r\n    } finally {\r\n        await client.end();\r\n    }\r\n}\r\n\r\nexamineCustomerTable();"
        }
    ]
}