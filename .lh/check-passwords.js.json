{
    "sourceFile": "check-passwords.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1760431595182,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1760431595182,
            "name": "Commit-0",
            "content": "import pkg from 'pg';\r\nconst { Client } = pkg;\r\n\r\nconst dbConfig = {\r\n    host: 'localhost',\r\n    port: 5432,\r\n    database: 'mapit',\r\n    user: 'postgres',\r\n    password: 'NewStrongPass123'\r\n};\r\n\r\nasync function checkPasswords() {\r\n    const client = new Client(dbConfig);\r\n    \r\n    try {\r\n        await client.connect();\r\n        console.log('‚úÖ Connected to database');\r\n        \r\n        // Get actual passwords for testing (first 3 users only)\r\n        console.log('\\nüîê Password values for testing:');\r\n        const passwordQuery = `\r\n            SELECT customer_id, first_name, last_name, email, password_hash\r\n            FROM customer \r\n            ORDER BY customer_id\r\n            LIMIT 5;\r\n        `;\r\n        \r\n        const result = await client.query(passwordQuery);\r\n        result.rows.forEach(row => {\r\n            console.log(`   ${row.email}: \"${row.password_hash}\"`);\r\n            console.log(`     Name: ${row.first_name} ${row.last_name} (ID: ${row.customer_id})`);\r\n        });\r\n        \r\n    } catch (error) {\r\n        console.error('‚ùå Error:', error.message);\r\n    } finally {\r\n        await client.end();\r\n    }\r\n}\r\n\r\ncheckPasswords();"
        }
    ]
}